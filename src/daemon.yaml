openapi: 3.0.3
info:
  description: >-
    The Chia node and services come with a JSON RPC API server that allows you to access information and control the services. 
    These are accessible via HTTPS, WebSockets, or via client SDKs. The ports can be configured in `~/.chia/mainnet/config/config.yaml`. 
    The RPC ports should not be exposed to the internet. TLS certificates are used to secure the communication 
    [using mutualTLS](https://github.com/dkackman/chia-api/wiki/Mutual-TLS).

    The daemon uses port 55400 by default.
  version: 2.4.0
  title: Chia RPC
  termsOfService: https://www.chia.net/assets/legal/Guidelines-for-Using-Chia-Network.pdf
  contact:
    name: Chia Network
    url: https://www.chia.net/
    email: hello@chia.net
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: wss://localhost:55400
    description: Daemon Websocket RPC
security:
  - bearerAuth: []
components:
  requestBodies:
    empty:
      $ref: "requestBodies/empty.yaml#/empty"
    service:
      $ref: "requestBodies/service.yaml#/service"
  responses:
    empty:
      $ref: "responses/empty.yaml#/empty"
  schemas:
    k_size:
      $ref: "schemas/k_size.yaml#/k_size"
    key_data:
      $ref: "schemas/key_data.yaml#/key_data"
    plotter_config:
      $ref: "schemas/plotter_config.yaml#/plotter_config"
    plotter_info:
      $ref: "schemas/plotter_info.yaml#/plotter_info"
    queued_plot_info:
      $ref: "schemas/queued_plot_info.yaml#/queued_plot_info"
    apiResponse:
      $ref: "schemas/apiResponse.yaml#/apiResponse"
    error_details:
      $ref: "schemas/error_details.yaml#/error_details"
    keyring_status:
      type: object
      properties:
        is_keyring_locked:
          type: boolean
        passphrase_support_enabled:
          type: boolean
        can_save_passphrase:
          type: boolean
        user_passphrase_is_set:
          type: boolean
        needs_migration:
          type: boolean
        can_remove_legacy_keys:
          type: boolean
        can_set_passphrase_hint:
          type: boolean
        passphrase_hint:
          type: string
        passphrase_requirements:
          type: object
          properties:
            is_optional:
              type: boolean
            min_length:
              type: integer
    network_info:
      $ref: "schemas/network_info.yaml#/network_info"
    private_key:
      type: object
      properties:
        pk:
          type: string
        entropy:
          type: string
  securitySchemes:
    bearerAuth:
      $ref: "securitySchemes/bearerAuth.yaml#/bearerAuth"
tags:
  - name: Daemon
    description: The daemon interface is exposed on port 55400 by default and uses WebSockets only. It can be used to interact with other service endpoints.
  - name: Key Ring
    description: Methods for managing keys and the keyring.
  - name: Plotter
    description: Methods for creating plots and managing plotters.
paths:
  /register_service:
    post:
      tags:
        - Daemon
      summary: Registers this daemon to receive messages.
      description: Registers this daemon to receive messages. This is needed to receive responses from services other than the daemon.
      operationId: register_service
      requestBody:
        $ref: "#/components/requestBodies/service"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      queue:
                        type: array
                        description: Only present when the registered service name is 'chia_plotter'
                        items:
                          $ref: "#/components/schemas/queued_plot_info"
                  - $ref: "#/components/schemas/apiResponse"
  /start_service:
    post:
      tags:
        - Daemon
      summary: Starts the named service.
      description: Starts the named service.
      operationId: start_service
      requestBody:
        $ref: "#/components/requestBodies/service"
      responses:
        "200":
          $ref: "#/components/responses/empty"
  /stop_service:
    post:
      tags:
        - Daemon
      summary: Stops the named service.
      description: Stops the named service.
      operationId: stop_service
      requestBody:
        $ref: "#/components/requestBodies/service"
      responses:
        "200":
          $ref: "#/components/responses/empty"
  /ping:
    post:
      tags:
        - Daemon
      summary: Ping the daemon.
      description: Ping the daemon.
      operationId: ping
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          $ref: "#/components/responses/empty"
  /exit:
    post:
      tags:
        - Daemon
      summary: Tells the daemon at the RPC endpoint to exit.
      description: Tells the daemon at the RPC endpoint to exit. There isn't a way to start the daemon remotely via RPC, so take care that you have access to the RPC host if needed.
      operationId: exit
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          $ref: "#/components/responses/empty"
  /is_running:
    post:
      tags:
        - Daemon
      summary: Determines if the named service is running.
      description: Determines if the named service is running.
      operationId: is_running
      requestBody:
        $ref: "#/components/requestBodies/service"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      is_running:
                        type: boolean
                  - $ref: "#/components/schemas/apiResponse"
  /get_version:
    post:
      tags:
        - Daemon
      summary: Get the installed version of chia at the endpoint.
      description: Get the installed version of chia at the endpoint.
      operationId: get_version
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      version:
                        type: string
                  - $ref: "#/components/schemas/apiResponse"
  /get_status:
    post:
      tags:
        - Daemon
      summary: Indicator if the genesis block is initialized.
      description: Indicator if the genesis block is initialized.
      operationId: get_status
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      genesis_initialized:
                        type: boolean
                  - $ref: "#/components/schemas/apiResponse"
  /get_plotters:
    post:
      tags:
        - Plotter
      summary: Get info about installed and installable plotters.
      description: Get info about installed and installable plotters.
      operationId: get_plotters
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      plotters:
                        type: object
                        additionalProperties:
                          $ref: "#/components/schemas/plotter_info"
                  - $ref: "#/components/schemas/apiResponse"
  /start_plotting:
    post:
      tags:
        - Plotter
      summary: Starts plotting.
      description: Starts plotting. Returns after request is added to the plotting queue. Does not wait for plotting to finish.
      operationId: start_plotting
      requestBody:
        description: Options for creating the plots
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/plotter_config"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      ids:
                        type: array
                        items:
                          type: string
                  - $ref: "#/components/schemas/apiResponse"
  /stop_plotting:
    post:
      tags:
        - Plotter
      summary: Stops the plot with the given id.
      description: Stops the plot with the given id.
      operationId: stop_plotting
      requestBody:
        description: The id of the plot to stop
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
              properties:
                id:
                  type: string
      responses:
        "200":
          $ref: "#/components/responses/empty"
  /is_keyring_locked:
    post:
      tags:
        - Key Ring
      summary: Returns whether the keyring is in a locked state.
      description: Returns whether the keyring is in a locked state. If the keyring doesn't have a master passphrase set, or if a master passphrase is set and the cached passphrase is valid, the keyring is "unlocked".
      operationId: is_keyring_locked
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      is_keyring_locked:
                        type: boolean
                  - $ref: "#/components/schemas/apiResponse"
  /keyring_status:
    post:
      tags:
        - Key Ring
      summary: Get detailed status of the key ring.
      description: Get detailed status of the key ring.
      operationId: keyring_status
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/keyring_status"
                  - $ref: "#/components/schemas/apiResponse"
  /unlock_keyring:
    post:
      tags:
        - Key Ring
      summary: Unlock the keyring.
      description: Unlock the keyring.
      operationId: unlock_keyring
      requestBody:
        description: Key ring key
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                key:
                  type: string
      responses:
        "200":
          $ref: "#/components/responses/empty"
  /validate_keyring_passphrase:
    post:
      tags:
        - Key Ring
      summary: Test the validity of a passphrase.
      description: Test the validity of a passphrase.
      operationId: validate_keyring_passphrase
      requestBody:
        description: The passphrase
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                key:
                  type: string
      responses:
        "200":
          $ref: "#/components/responses/empty"
  /set_keyring_passphrase:
    post:
      tags:
        - Key Ring
      summary: Update the key ring passphrase.
      description: Update the key ring passphrase.
      operationId: set_keyring_passphrase
      requestBody:
        description: The passphrase options
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - new_passphrase
              properties:
                current_passphrase:
                  type: string
                new_passphrase:
                  type: string
                passphrase_hint:
                  type: string
                save_passphrase:
                  type: boolean
                  default: false
      responses:
        "200":
          $ref: "#/components/responses/empty"
  /remove_keyring_passphrase:
    post:
      tags:
        - Key Ring
      summary: Remove the key ring passphrase.
      description: Remove the key ring passphrase.
      operationId: remove_keyring_passphrase
      requestBody:
        description: The passphrase
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - current_passphrase
              properties:
                current_passphrase:
                  type: string
      responses:
        "200":
          $ref: "#/components/responses/empty"
  /add_private_key:
    post:
      tags:
        - Key Ring
      summary: Adds a private key to the keychain.
      description:
        Adds a private key to the keychain, with the given entropy and passphrase. The
        keychain itself will store the public key, and the entropy bytes, but not the passphrase.
      operationId: add_private_key
      requestBody:
        description: The private key
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - mnemonic
                - passphrase
              properties:
                mnemonic:
                  type: string
                passphrase:
                  type: string
      responses:
        "200":
          description: OK response without return values
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/apiResponse"
                  - $ref: "#/components/schemas/error_details"
                  - type: object
                    properties:
                      fingerprint:
                        type: integer
                        format: uint32
  /check_keys:
    post:
      tags:
        - Key Ring
      summary: Check the keys.
      description: Check the keys.
      operationId: check_keys
      requestBody:
        description: The config root path
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - root_path
              properties:
                root_path:
                  type: string
      responses:
        "200":
          description: OK response without return values
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/apiResponse"
                  - $ref: "#/components/schemas/error_details"
  /delete_all_keys:
    post:
      tags:
        - Key Ring
      summary: Deletes all keys from the keychain.
      description: Deletes all keys from the keychain.
      operationId: daemon_delete_all_keys
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          $ref: "#/components/responses/empty"
  /delete_key_by_fingerprint:
    post:
      tags:
        - Key Ring
      summary: Deletes all keys which have the given public key fingerprint.
      description: Deletes all keys which have the given public key fingerprint.
      operationId: delete_key_by_fingerprint
      requestBody:
        description: The fingerprint
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - fingerprint
              properties:
                fingerprint:
                  type: integer
                  format: uint32
      responses:
        "200":
          description: OK response without return values
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/apiResponse"
                  - $ref: "#/components/schemas/error_details"
  /get_all_private_keys:
    post:
      tags:
        - Key Ring
      summary: Returns all private keys which can be retrieved, with the given passphrases.
      description:
        Returns all private keys which can be retrieved, with the given passphrases.
        A tuple of key, and entropy bytes (i.e. mnemonic) is returned for each key.
      operationId: get_all_private_keys
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      private_keys:
                        type: array
                        items:
                          $ref: "#/components/schemas/private_key"
                  - $ref: "#/components/schemas/apiResponse"
  /get_first_private_key:
    post:
      tags:
        - Key Ring
      summary: Returns the first key in the keychain.
      description: Returns the first key in the keychain.
      operationId: get_first_private_key
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/private_key"
                  - $ref: "#/components/schemas/apiResponse"
  /get_key_for_fingerprint:
    post:
      tags:
        - Key Ring
      summary: Locates and returns a private key matching the provided fingerprint.
      description: Locates and returns a private key matching the provided fingerprint.
      operationId: get_key_for_fingerprint
      requestBody:
        description: The fingerprint
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - fingerprint
              properties:
                fingerprint:
                  type: integer
                  format: uint32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/private_key"
                  - $ref: "#/components/schemas/apiResponse"
  /get_key:
    post:
      tags:
        - Key Ring
      summary: Locates and returns KeyData matching the provided fingerprint.
      description: Locates and returns KeyData matching the provided fingerprint.
      operationId: get_key
      requestBody:
        description: The fingerprint
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - fingerprint
              properties:
                fingerprint:
                  type: integer
                  format: uint32
                include_secrets:
                  type: boolean
                  default: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/key_data"
                  - $ref: "#/components/schemas/apiResponse"
  /get_keys:
    post:
      tags:
        - Key Ring
      summary: Returns the KeyData of all keys which can be retrieved.
      description: Returns the KeyData of all keys which can be retrieved.
      operationId: get_keys
      requestBody:
        description: The fingerprint
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - fingerprint
              properties:
                fingerprint:
                  type: integer
                  format: uint32
                include_secrets:
                  type: boolean
                  default: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - type: object
                    properties:
                      keys:
                        type: array
                        items:
                          $ref: "#/components/schemas/key_data"
                  - $ref: "#/components/schemas/apiResponse"
  /set_label:
    post:
      tags:
        - Key Ring
      summary: Assigns the given label to the first key with the given fingerprint.
      description: Assigns the given label to the first key with the given fingerprint.
      operationId: set_label
      requestBody:
        description: The fingerprint
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - fingerprint
                - label
              properties:
                fingerprint:
                  type: integer
                  format: uint32
                label:
                  type: string
      responses:
        "200":
          $ref: "#/components/responses/empty"
  /delete_label:
    post:
      tags:
        - Key Ring
      summary: Removes the label assigned to the key with the given fingerprint.
      description: Removes the label assigned to the key with the given fingerprint.
      operationId: delete_label
      requestBody:
        description: The fingerprint
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - fingerprint
              properties:
                fingerprint:
                  type: integer
                  format: uint32
      responses:
        "200":
          $ref: "#/components/responses/empty"
  /running_services:
    post:
      tags:
        - Daemon
      summary: Returns the list of running services.
      description: Returns the list of running services.
      operationId: running_services
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - type: object
                    properties:
                      running_services:
                        type: array
                        items:
                          type: string
                  - $ref: "#/components/schemas/apiResponse"
  /get_wallet_addresses:
    post:
      tags:
        - Daemon
      summary: Returns the list of addresses.
      description: Returns the list of addresses.
      operationId: get_wallet_addresses
      requestBody:
        description: Input parameters
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fingerprints:
                  type: array
                  items:
                    type: integer
                    format: uint32
                index:
                  type: integer
                  format: uint32
                count:
                  type: integer
                  format: uint32
                non_observer_derivation:
                  type: boolean
                  default: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - type: object
                    properties:
                      wallet_addresses:
                        additionalProperties:
                          type: array
                          items:
                            type: string
                  - $ref: "#/components/schemas/apiResponse"
  /get_keys_for_plotting:
    post:
      tags:
        - Plotter
      summary: Returns a list of keys.
      description: Returns the list of keys used for plotting.
      operationId: get_keys_for_plotting
      requestBody:
        description: Input parameters
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fingerprints:
                  type: array
                  items:
                    type: integer
                    format: uint32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - type: object
                    properties:
                      keys:
                        description: The keys are uint32 - the fingerprint
                        additionalProperties:
                          type: object
                          properties:
                            pool_public_key:
                              type: string
                              format: hex
                            farmer_public_key:
                              type: string
                              format: hex
                  - $ref: "#/components/schemas/apiResponse"
  /get_network_info:
    post:
      tags:
        - Shared
      description: Retrieves some information about the current network.
      summary: Retrieves some information about the current network.
      operationId: full_node_get_network_info
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/network_info"
                  - $ref: "#/components/schemas/apiResponse"
externalDocs:
  description: Find out more about chia
  url: https://chia.net
