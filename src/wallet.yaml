openapi: 3.0.3
info:
  description: >-
    The Chia node and services come with a JSON RPC API server that allows you to access information and control the services. 
    These are accessible via HTTPS, WebSockets, or via client SDKs. The ports can be configured in `~/.chia/mainnet/config/config.yaml`. 
    The RPC ports should not be exposed to the internet. TLS certificates are used to secure the communication 
    [using mutualTLS](https://github.com/dkackman/chia-api/wiki/Mutual-TLS).

    The wallet uses port 9256 by default.
  version: 2.0.0
  title: Chia RPC
  termsOfService: https://www.chia.net/assets/legal/Guidelines-for-Using-Chia-Network.pdf
  contact:
    name: Chia Network
    url: https://www.chia.net/
    email: hello@chia.net
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://localhost:9256
    description: Wallet RPC
security:
  - bearerAuth: []
components:
  requestBodies:
    empty:
      $ref: "requestBodies/empty.yaml#/empty"
    fingerprint:
      $ref: "requestBodies/fingerprint.yaml#/fingerprint"
    wallet_id:
      $ref: "requestBodies/wallet_id.yaml#/wallet_id"
    transaction_id:
      $ref: "requestBodies/transaction_id.yaml#/transaction_id"
  responses:
    empty:
      $ref: "responses/empty.yaml#/empty"
    coin_records:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              coin_records:
                type: array
                items:
                  $ref: "#/components/schemas/coin_record"
            allOf:
              - $ref: "#/components/schemas/apiResponse"
    fingerprint_response:
      description: OK
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  fingerprint:
                    type: integer
                    format: uint32
              - $ref: "#/components/schemas/apiResponse"
    transaction_record_response:
      description: OK response with a transaction record and a transaction id.
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  transaction:
                    $ref: "#/components/schemas/transaction_record"
                  transaction_id:
                    type: string
                    format: hex
              - $ref: "#/components/schemas/apiResponse"
  schemas:
    amount_filter:
      $ref: "schemas/amount_filter.yaml#/amount_filter"
    amount_with_puzzlehash:
      $ref: "schemas/amount_with_puzzlehash.yaml#/amount_with_puzzlehash"
    coin_announcement:
      $ref: "schemas/coin_announcement.yaml#/coin_announcement"
    coin_record_order:
      $ref: "schemas/coin_record_order.yaml#/coin_record_order"
    coin_search_options:
      type: object
      properties:
        start_height:
          type: integer
          format: uint32
        end_height:
          type: integer
          format: uint32
        include_spent_coins:
          type: boolean
    coin_type:
      $ref: "schemas/coin_type.yaml#/coin_type"
    connection_info:
      $ref: "schemas/connection_info.yaml#/connection_info"
    puzzle_announcement:
      $ref: "schemas/puzzle_announcement.yaml#/puzzle_announcement"
    cat_info:
      $ref: "schemas/cat_info.yaml#/cat_info"
    coin:
      $ref: "schemas/coin.yaml#/coin"
    coin_record:
      $ref: "schemas/coin_record.yaml#/coin_record"
    farmer_rewards:
      $ref: "schemas/farmer_rewards.yaml#/farmer_rewards"
    hash_filter:
      $ref: "schemas/hash_filter.yaml#/hash_filter"
    lineage_proof:
      $ref: "schemas/lineage_proof.yaml#/lineage_proof"
    mirror:
      $ref: "schemas/mirror.yaml#/mirror"
    mnemonic:
      $ref: "schemas/mnemonic.yaml#/mnemonic"
    network_info:
      $ref: "schemas/network_info.yaml#/network_info"
    nft_info:
      $ref: "schemas/nft_info.yaml#/nft_info"
    pool_state:
      $ref: "schemas/pool_state.yaml#/pool_state"
    pool_wallet_info:
      $ref: "schemas/pool_wallet_info.yaml#/pool_wallet_info"
    private_key:
      $ref: "schemas/private_key.yaml#/private_key"
    singleton_record:
      $ref: "schemas/singleton_record.yaml#/singleton_record"
    spend_bundle:
      $ref: "schemas/spend_bundle.yaml#/spend_bundle"
    token:
      $ref: "schemas/token.yaml#/token"
    trade_record:
      $ref: "schemas/trade_record.yaml#/trade_record"
    transaction_record:
      $ref: "schemas/transaction_record.yaml#/transaction_record"
    transaction_type:
      $ref: "schemas/transaction_type.yaml#/transaction_type"
    transaction_type_filter:
      $ref: "schemas/transaction_type_filter.yaml#/transaction_type_filter"
    uint32_range:
      $ref: "schemas/uint32_range.yaml#/uint32_range"
    uint64_range:
      $ref: "schemas/uint64_range.yaml#/uint64_range"
    vc_proofs:
      $ref: "schemas/vc_proofs.yaml#/vc_proofs"
    vc_record:
      $ref: "schemas/vc_record.yaml#/vc_record"
    wallet_balance:
      $ref: "schemas/wallet_balance.yaml#/wallet_balance"
    wallet_info:
      $ref: "schemas/wallet_info.yaml#/wallet_info"
    wallet_type:
      $ref: "schemas/wallet_type.yaml#/wallet_type"
    apiResponse:
      $ref: "schemas/apiResponse.yaml#/apiResponse"
  securitySchemes:
    bearerAuth:
      $ref: "securitySchemes/bearerAuth.yaml#/bearerAuth"
tags:
  - name: Shared
    description: Methods shared by all services.
  - name: CAT Wallet
    description: CATs, trades, and offers.
  - name: DID Wallet
    description: Distributed Identity wallet.
  - name: Key Management
    description: Methods for managing keys.
  - name: Pool Wallet
    description: Pool wallet api.
  - name: Notifications
    description: Notification api.
  - name: Wallet
    description: Methods for shared wallet operations.
  - name: Wallet Management
    description: Methods for creating and managing wallets.
  - name: Wallet Node
    description: The wallet RPC API is exposed, by default, on port 9256 and contains methods for managing wallet, trades, offers and transactions.
  - name: Data Layer Wallet
    description: Methods for managing a data layer wallet.
  - name: Verified Credential
    description: Methods for managing verified credentials
paths:
  /create_new_dl:
    post:
      tags:
        - Data Layer Wallet
      summary: Initialize the new data layer wallets.
      description: Initialize the DataLayer Wallet (only one can exist).
      operationId: create_new_dl
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - root
              properties:
                root:
                  type: string
                  format: bytes32
                fee:
                  type: integer
                  format: uint64
                  default: 0
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: Response when the new data layer wallet is created.
                    properties:
                      transactions:
                        type: array
                        items:
                          $ref: "#/components/schemas/transaction_record"
                      launcher_id:
                        type: string
                        format: hex
                  - $ref: "#/components/schemas/apiResponse"
  /dl_track_new:
    post:
      tags:
        - Data Layer Wallet
      summary: Track the new data layer wallet
      description: Track the new data layer wallet.
      operationId: dl_track_new
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - launcher_id
              properties:
                launcher_id:
                  type: string
                  format: bytes32
      responses:
        "200":
          $ref: "#/components/responses/empty"
  /dl_stop_tracking:
    post:
      tags:
        - Data Layer Wallet
      summary: Stop tracking the data layer wallets.
      description: Stop tracking the data layer wallet.
      operationId: dl_stop_tracking
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - launcher_id
              properties:
                launcher_id:
                  type: string
                  format: bytes32
      responses:
        "200":
          $ref: "#/components/responses/empty"
  /dl_latest_singleton:
    post:
      tags:
        - Data Layer Wallet
      summary: Get the singleton records that contain the specified root.
      description: Get the singleton records that contain the specified root.
      operationId: dl_latest_singleton
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - launcher_id
                - root
              properties:
                launcher_id:
                  type: string
                  format: bytes32
                root:
                  type: string
                  format: bytes32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      singleton:
                        $ref: "#/components/schemas/lineage_proof"
                  - $ref: "#/components/schemas/apiResponse"
  /dl_singletons_by_root:
    post:
      tags:
        - Data Layer Wallet
      summary: Get the singleton records that contain the specified root.
      description: Get the singleton records that contain the specified root.
      operationId: dl_singletons_by_root
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - launcher_id
                - root
              properties:
                launcher_id:
                  type: string
                  format: bytes32
                root:
                  type: string
                  format: bytes32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      singleton:
                        type: array
                        items:
                          $ref: "#/components/schemas/singleton_record"
                  - $ref: "#/components/schemas/apiResponse"
  /dl_update_root:
    post:
      tags:
        - Data Layer Wallet
      summary: Update a data layer root.
      description: Update a data layer root.
      operationId: dl_update_root
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - launcher_id
                - new_root
              properties:
                launcher_id:
                  type: string
                  format: bytes32
                new_root:
                  type: string
                  format: bytes32
                fee:
                  type: integer
                  format: uint64
                  default: 0
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      tx_record:
                        $ref: "#/components/schemas/transaction_record"
                  - $ref: "#/components/schemas/apiResponse"
  /dl_update_multiple:
    post:
      tags:
        - Data Layer Wallet
      summary: Update multiple singletons with new merkle roots.
      description: Update multiple singletons with new merkle roots.
      operationId: dl_update_multiple
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - updates
                - new_root
              properties:
                updates:
                  type: array
                  items:
                    type: object
                    required:
                      - root
                      - launcher
                    properties:
                      root:
                        type: string
                        format: bytes32
                      launcher:
                        type: string
                        format: bytes32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      tx_records:
                        type: array
                        items:
                          $ref: "#/components/schemas/transaction_record"
                  - $ref: "#/components/schemas/apiResponse"
  /dl_history:
    post:
      tags:
        - Data Layer Wallet
      summary: Get the singleton record for the latest singleton of a launcher ID.
      description: Get the singleton record for the latest singleton of a launcher ID.
      operationId: dl_history
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - launcher_id
              properties:
                launcher_id:
                  type: string
                  format: bytes32
                min_generation:
                  type: integer
                  format: uint32
                max_generation:
                  type: integer
                  format: uint32
                num_results:
                  type: integer
                  format: uint32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      count:
                        type: integer
                      history:
                        type: array
                        items:
                          $ref: "#/components/schemas/singleton_record"
                  - $ref: "#/components/schemas/apiResponse"
  /dl_owned_singletons:
    post:
      tags:
        - Data Layer Wallet
      summary: Get all owned singleton records.
      description: Get all owned singleton records.
      operationId: dl_owned_singletons
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      history:
                        type: array
                        items:
                          $ref: "#/components/schemas/singleton_record"
                  - $ref: "#/components/schemas/apiResponse"
  /dl_get_mirrors:
    post:
      tags:
        - Data Layer Wallet
      summary: Get all of the mirrors for a specific singleton.
      description: Get all of the mirrors for a specific singleton.
      operationId: dl_get_mirrors
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - launcher_id
              properties:
                launcher_id:
                  type: string
                  format: bytes32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      mirrors:
                        type: array
                        items:
                          $ref: "#/components/schemas/mirror"
                  - $ref: "#/components/schemas/apiResponse"
  /dl_new_mirror:
    post:
      tags:
        - Data Layer Wallet
      summary: Add a new on chain message for a specific singleton.
      description: Add a new on chain message for a specific singleton
      operationId: dl_new_mirror
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - launcher_id
                - amount
                - urls
              properties:
                launcher_id:
                  type: string
                  format: bytes32
                amount:
                  type: integer
                  format: uint64
                urls:
                  type: array
                  items:
                    type: string
                    format: bytes32
                fee:
                  type: integer
                  format: uint64
                  default: 0
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      transactions:
                        type: array
                        items:
                          $ref: "#/components/schemas/transaction_record"
                  - $ref: "#/components/schemas/apiResponse"
  /dl_delete_mirror:
    post:
      tags:
        - Data Layer Wallet
      summary: Remove an existing mirror for a specific singleton.
      description: Remove an existing mirror for a specific singleton.
      operationId: dl_delete_mirror
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - coin_id
              properties:
                coin_id:
                  type: string
                  format: bytes32
                fee:
                  type: integer
                  format: uint64
                  default: 0
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      transactions:
                        type: array
                        items:
                          $ref: "#/components/schemas/transaction_record"
                  - $ref: "#/components/schemas/apiResponse"
  /stop_node:
    post:
      tags:
        - Shared
      summary: Stop the node.
      description: Stop the node.
      operationId: stop_node
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          $ref: "#/components/responses/empty"
  /open_connection:
    post:
      tags:
        - Shared
      summary: Add a connection to another node.
      description: Add a connection to another node.
      operationId: open_connection
      requestBody:
        required: true
        description: the address of the connection
        content:
          application/json:
            schema:
              type: object
              required:
                - ip
                - port
              properties:
                ip:
                  type: string
                  format: ipaddress
                port:
                  type: integer
      responses:
        "200":
          $ref: "#/components/responses/empty"
  /close_connection:
    post:
      tags:
        - Shared
      summary: Removes a connection.
      description: Removes a connection.
      operationId: close_connection
      requestBody:
        required: true
        description: the node id of the connection
        content:
          application/json:
            schema:
              type: object
              required:
                - node_id
              properties:
                node_id:
                  type: string
      responses:
        "200":
          $ref: "#/components/responses/empty"
  /get_connections:
    post:
      tags:
        - Shared
      summary: Retrieve the list of connections.
      description: Retrieve the list of connections.
      operationId: get_connections
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      connections:
                        type: array
                        items:
                          $ref: "#/components/schemas/connection_info"
                  - $ref: "#/components/schemas/apiResponse"
  /healthz:
    post:
      tags:
        - Shared
      summary: Heartbeat.
      description: Heartbeat.
      operationId: healthz
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiResponse"
  /get_routes:
    post:
      tags:
        - Shared
      summary: Retrieve the list of routes exposed by the service.
      description: Retrieve the list of routes/endpoints exposed by the service.
      operationId: get_routes
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      routes:
                        type: array
                        items:
                          type: string
                  - $ref: "#/components/schemas/apiResponse"
  /nft_mint_bulk:
    post:
      tags:
        - NFT Wallet
      description: Mints NFTs in bulk.
      summary: Mints NFTs in bulk.
      operationId: nft_mint_bulk
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - wallet_id
                - metadata_list
              properties:
                metadata_list:
                  description: A list of dicts containing the metadata for each NFT to be minted
                  type: array
                  items:
                    type: object
                    required:
                      - uris
                      - meta_uris
                    properties:
                      uris:
                        type: array
                        items:
                          type: string
                          format: uri
                      meta_uris:
                        type: array
                        items:
                          type: string
                          format: uri
                      license_uris:
                        type: array
                        items:
                          type: string
                          format: uri
                      hash:
                        type: string
                        format: hex
                      meta_hash:
                        type: string
                        format: hex
                      license_hash:
                        type: string
                        format: hex
                      edition_number:
                        type: integer
                        format: uint64
                        default: 1
                      edition_total:
                        type: integer
                        format: uint64
                        default: 1
                wallet_id:
                  type: integer
                  format: uint32
                royalty_address:
                  type: string
                  format: hex
                royalty_percentage:
                  type: integer
                  format: uint16
                  default: 0
                target_list:
                  description: a list of targets for transferring minted NFTs (aka airdrop)
                  type: array
                  items:
                    type: string
                    format: hex
                mint_number_start:
                  description: The starting point for mint number used in intermediate launcher puzzle
                  type: integer
                  default: 1
                mint_total:
                  description: The total number of NFTs being minted
                  type: integer
                xch_coins:
                  description:
                    For use with bulk minting to provide the coin used for funding the minting spend.
                    This coin can be one that will be created in the future
                  type: array
                  items:
                    $ref: "#/components/schemas/coin"
                xch_change_target:
                  description:
                    For use with bulk minting, so we can specify the puzzle hash that the change
                    from the funding transaction goes to.
                  type: string
                  format: hex
                new_innerpuzhash:
                  type: string
                  format: hex
                new_p2_puzhash:
                  type: string
                  format: hex
                did_coin:
                  $ref: "#/components/schemas/coin"
                did_lineage_parent_hex:
                  type: string
                  format: hex
                mint_from_did:
                  type: boolean
                  default: false
                fee:
                  type: integer
                  format: uint64
                  default: 0
                reuse_puzhash:
                  type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      spend_bundle:
                        $ref: "#/components/schemas/spend_bundle"
                      nft_id_list:
                        type: array
                        items:
                          type: string
                          format: hex
                  - $ref: "#/components/schemas/apiResponse"
  /nft_mint_nft:
    post:
      tags:
        - NFT Wallet
      description: Mints an NFT.
      summary: Mints an NFT.
      operationId: nft_mint_nft
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - wallet_id
                - uris
                - hash
              properties:
                wallet_id:
                  type: integer
                  format: uint32
                royalty_address:
                  type: string
                  format: hex
                target_address:
                  type: string
                  format: hex
                uris:
                  type: array
                  items:
                    type: string
                    format: uri
                meta_uris:
                  type: array
                  items:
                    type: string
                    format: uri
                license_uris:
                  type: array
                  items:
                    type: string
                    format: uri
                hash:
                  type: string
                  format: hex
                edition_number:
                  type: integer
                  format: uint64
                  default: 1
                edition_total:
                  type: integer
                  format: uint64
                  default: 1
                fee:
                  type: integer
                  format: uint64
                  default: 0
                meta_hash:
                  type: string
                  format: hex
                license_hash:
                  type: string
                  format: hex
                did_id:
                  type: string
                royalty_percentage:
                  type: integer
                  format: uint16
                  default: 0
                reuse_puzhash:
                  type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      wallet_id:
                        type: integer
                        format: uint32
                      spend_bundle:
                        $ref: "#/components/schemas/spend_bundle"
                      nft_id:
                        type: string
                        format: hex
                  - $ref: "#/components/schemas/apiResponse"
  /nft_get_nfts:
    post:
      tags:
        - NFT Wallet
      summary: Gets NFTs from a wallet.
      description: Gets NFTs from a wallet.
      operationId: nft_get_nfts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - wallet_id
              properties:
                wallet_id:
                  type: integer
                  format: uint32
                start_index:
                  type: integer
                  format: uint32
                  default: 0
                num:
                  type: integer
                  format: uint32
                  default: 0
                ignore_size_limit:
                  type: boolean
                  default: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      wallet_id:
                        type: integer
                        format: uint32
                      nft_list:
                        type: array
                        items:
                          $ref: "#/components/schemas/nft_info"
                  - $ref: "#/components/schemas/apiResponse"
  /nft_set_nft_did:
    post:
      tags:
        - NFT Wallet
      summary: Sets the DID of an NFT.
      description: Sets the DID of an NFT.
      operationId: nft_set_nft_did
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - wallet_id
                - did_id
                - nft_coin_id
              properties:
                wallet_id:
                  type: integer
                  format: uint32
                did_id:
                  type: string
                nft_coin_id:
                  type: string
                  format: hex
                fee:
                  type: integer
                  format: uint64
                  default: 0
                reuse_puzhash:
                  type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      wallet_id:
                        type: integer
                        format: uint32
                      spend_bundle:
                        $ref: "#/components/schemas/spend_bundle"
                  - $ref: "#/components/schemas/apiResponse"
  /nft_get_by_did:
    post:
      tags:
        - NFT Wallet
      summary: Gets an NFT wallet by its DID.
      description: Gets an NFT wallet by its DID.
      operationId: nft_get_by_did
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - did_id
              properties:
                did_id:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      wallet_id:
                        type: integer
                        format: uint32
                  - $ref: "#/components/schemas/apiResponse"
  /nft_get_wallet_did:
    post:
      tags:
        - NFT Wallet
      summary: Gets the DID for an NFT wallet.
      description: Gets the DID for an NFT wallet.
      operationId: nft_get_wallet_did
      requestBody:
        $ref: "#/components/requestBodies/wallet_id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      did_id:
                        type: string
                  - $ref: "#/components/schemas/apiResponse"
  /nft_get_wallets_with_dids:
    post:
      tags:
        - NFT Wallet
      summary: Gets all the wallets with a DID.
      description: Gets all the wallets with a DID.
      operationId: nft_get_wallets_with_dids
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      nft_wallets:
                        type: array
                        items:
                          type: object
                          properties:
                            wallet_id:
                              type: integer
                              format: uint32
                            did_id:
                              type: string
                            did_wallet_id:
                              type: integer
                              format: uint32
                  - $ref: "#/components/schemas/apiResponse"
  /nft_set_nft_status:
    post:
      tags:
        - NFT Wallet
      summary: Sets the status of an NFT.
      description: Sets the status of an NFT.
      operationId: nft_set_nft_status
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - wallet_id
                - coin_id
                - in_transaction
              properties:
                wallet_id:
                  type: integer
                  format: uint32
                coin_id:
                  type: string
                  format: hex
                in_transaction:
                  type: boolean
      responses:
        "200":
          $ref: "#/components/responses/empty"
  /nft_transfer_nft:
    post:
      tags:
        - NFT Wallet
      summary: Transfers an NFT to another address.
      description: Transfers an NFT to another address.
      operationId: nft_transfer_nft
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - wallet_id
                - target_address
                - nft_coin_id
              properties:
                wallet_id:
                  type: integer
                  format: uint32
                target_address:
                  type: string
                  format: hex
                nft_coin_id:
                  type: string
                  format: hex
                fee:
                  type: integer
                  format: uint64
                  default: 0
                reuse_puzhash:
                  type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      wallet_id:
                        type: integer
                        format: uint32
                      spend_bundle:
                        $ref: "#/components/schemas/spend_bundle"
                  - $ref: "#/components/schemas/apiResponse"
  /nft_calculate_royalties:
    post:
      tags:
        - NFT Wallet
      summary: Transfers an NFT to another address.
      description: Transfers an NFT to another address.
      operationId: nft_calculate_royalties
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                royalty_assets:
                  type: array
                  items:
                    type: object
                    properties:
                      asset:
                        type: string
                        format: hex
                      royalty_address:
                        type: string
                        format: hex
                      royalty_percentage:
                        type: integer
                        format: uint16
                fungible_assets:
                  type: array
                  items:
                    type: object
                    properties:
                      asset:
                        type: string
                        format: hex
                      amount:
                        type: integer
                        format: uint64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    additionalProperties:
                      type: array
                      items:
                        type: object
                        properties:
                          asset:
                            type: string
                            format: hex
                          address:
                            type: string
                            format: hex
                          amount:
                            type: integer
                            format: uint64
                  - $ref: "#/components/schemas/apiResponse"

  /nft_get_info:
    post:
      tags:
        - NFT Wallet
      summary: Gets info about an NFT.
      description: Gets info about an NFT.
      operationId: nft_get_info
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - coin_id
              properties:
                coin_id:
                  type: string
                  format: hex
                latest:
                  type: boolean
                  default: true
                ignore_size_limit:
                  type: boolean
                  default: false
                reuse_puzhash:
                  type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      nft_info:
                        $ref: "#/components/schemas/nft_info"
                  - $ref: "#/components/schemas/apiResponse"
  /nft_add_uri:
    post:
      tags:
        - NFT Wallet
      summary: Adds an Uri to an NFT.
      description: Adds a Uri to an NFT.
      operationId: nft_add_uri
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - wallet_id
                - uri
                - key
                - nft_coin_id
              properties:
                wallet_id:
                  type: integer
                  format: uint32
                uri:
                  type: string
                  format: uri
                key:
                  type: string
                  enum:
                    - "u" # data uri
                    - "mu" # metadata uri
                    - "lu" # license uri
                  description: >-
                    The type of uri:
                      * u Uri for the NFT data
                      * mu Uri for NFT metadata
                      * lu Uri for the NFT license
                nft_coin_id:
                  type: string
                  format: hex
                fee:
                  type: integer
                  format: uint64
                  default: 0
                reuse_puzhash:
                  type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      wallet_id:
                        type: integer
                        format: uint32
                      spend_bundle:
                        $ref: "#/components/schemas/spend_bundle"
                  - $ref: "#/components/schemas/apiResponse"
  /did_create_backup_file:
    post:
      tags:
        - DID Wallet
      summary: Creates a backup file for the given DID wallet.
      description: Creates a backup file for the given DID wallet.
      operationId: did_create_backup_file
      requestBody:
        $ref: "#/components/requestBodies/wallet_id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      wallet_id:
                        type: integer
                        format: uint32
                      backup_data:
                        type: string
                  - $ref: "#/components/schemas/apiResponse"
  /did_transfer_did:
    post:
      tags:
        - DID Wallet
      summary: Transfer a DID to another owner.
      description: Transfer the given DID wallet to another owner.
      operationId: did_transfer_did
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - wallet_id
                - inner_address
              properties:
                wallet_id:
                  type: integer
                  format: uint32
                inner_address:
                  type: string
                  format: hex
                fee:
                  type: integer
                  format: uint64
                  default: 0
                with_recovery_info:
                  type: boolean
                  default: true
                reuse_puzhash:
                  type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      transaction:
                        $ref: "#/components/schemas/transaction_record"
                      transaction_id:
                        type: string
                        format: hex
                  - $ref: "#/components/schemas/apiResponse"
  /did_get_information_needed_for_recovery:
    post:
      tags:
        - DID Wallet
      summary: Retrieves the recovery information needed for the given DID wallet.
      description: Retrieves the recovery information needed for the given DID wallet.
      operationId: did_get_information_needed_for_recovery
      requestBody:
        $ref: "#/components/requestBodies/wallet_id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      wallet_id:
                        type: integer
                        format: uint32
                      my_did:
                        type: string
                      coin_name:
                        type: string
                      newpuzhash:
                        type: string
                      pubkey:
                        type: string
                      backup_dids:
                        type: array
                        items:
                          type: string
                  - $ref: "#/components/schemas/apiResponse"
  /did_create_attest:
    post:
      tags:
        - DID Wallet
      summary: Creates an attestment for the given DID wallet.
      description: Creates an attestment for the given DID wallet.
      operationId: did_create_attest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - wallet_id
                - coin_name
                - pubkey
                - puzhash
              properties:
                wallet_id:
                  type: integer
                  format: uint32
                coin_name:
                  type: string
                  format: hex
                pubkey:
                  type: string
                  format: hex
                puzhash:
                  type: string
                  format: hex
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      message_spend_bundle:
                        type: string
                        format: hex
                      info:
                        type: array
                        items: # [string, string uint64]
                          oneOf:
                            - type: string
                              format: hex
                            - type: string
                              format: hex
                            - type: integer
                              format: uint64
                          minItems: 3
                          maxItems: 3
                      attest_data:
                        type: string
                        format: hex
                  - $ref: "#/components/schemas/apiResponse"
  /did_get_pubkey:
    post:
      tags:
        - DID Wallet
      summary: Retrieves the public key for the given DID wallet.
      description: Retrieves the public key for the given DID wallet.
      operationId: did_get_pubkey
      requestBody:
        $ref: "#/components/requestBodies/wallet_id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      pubkey:
                        type: string
                        format: hex
                  - $ref: "#/components/schemas/apiResponse"
  /did_get_current_coin_info:
    post:
      tags:
        - DID Wallet
      summary: Gets information about the DID wallets current coin.
      description: Gets information about the DID wallets current coin.
      operationId: did_get_current_coin_info
      requestBody:
        $ref: "#/components/requestBodies/wallet_id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      wallet_id:
                        type: integer
                        format: uint32
                      my_did:
                        type: string
                        format: hex
                      did_parent:
                        type: string
                        format: hex
                      did_innerpuz:
                        type: string
                        format: hex
                      did_amount:
                        type: integer
                        format: uint64
                  - $ref: "#/components/schemas/apiResponse"
  /did_recovery_spend:
    post:
      tags:
        - DID Wallet
      summary: Spend from the given DID wallet.
      description: Spend from the given DID wallet.
      operationId: did_recovery_spend
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - wallet_id
                - attest_data
              properties:
                wallet_id:
                  type: integer
                  format: uint32
                attest_data:
                  type: array
                  items:
                    type: string
                pubkey:
                  type: string
                  format: hex
                puzhash:
                  type: string
                  format: hex
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      spend_bundle:
                        $ref: "#/components/schemas/spend_bundle"
                  - $ref: "#/components/schemas/apiResponse"
  /did_get_recovery_list:
    post:
      tags:
        - DID Wallet
      summary: Retrieves the recovery list for a given DID wallet.
      description: Retrieves the recovery list for a given DID wallet.
      operationId: did_get_recovery_list
      requestBody:
        $ref: "#/components/requestBodies/wallet_id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      wallet_id:
                        type: integer
                        format: uint32
                      recover_list:
                        type: array
                        items:
                          type: string
                          format: hex
                      num_required:
                        type: integer
                        format: uint64
                  - $ref: "#/components/schemas/apiResponse"
  /did_get_did:
    post:
      tags:
        - DID Wallet
      summary: Retrieves the distributed identity for a given wallet.
      description: Retrieves the distributed identity for a given wallet.
      operationId: did_get_did
      requestBody:
        $ref: "#/components/requestBodies/wallet_id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      wallet_id:
                        type: integer
                        format: uint32
                      my_did:
                        type: string
                      coin_id:
                        type: string
                  - $ref: "#/components/schemas/apiResponse"
  /did_update_recovery_ids:
    post:
      tags:
        - DID Wallet
      summary: Updates the recovery ids for a DID wallet.
      description: Updates the recovery ids for a DID wallet.
      operationId: did_update_recovery_ids
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - wallet_id
                - new_list
              properties:
                wallet_id:
                  type: integer
                  format: uint32
                new_list:
                  type: array
                  items:
                    type: string
                    format: hex
                num_verifications_required:
                  type: integer
                  format: uint64
                reuse_puzhash:
                  type: boolean
      responses:
        "200":
          $ref: "#/components/responses/empty"
  /did_set_wallet_name:
    post:
      tags:
        - DID Wallet
      summary: Sets the name of a DID wallet.
      description: Sets the name of a DID wallet.
      operationId: did_set_wallet_name
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - wallet_id
                - name
              properties:
                wallet_id:
                  type: integer
                  format: uint32
                name:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/apiResponse"
                  - type: object
                    properties:
                      wallet_id:
                        type: integer
                        format: uint32
  /did_get_wallet_name:
    post:
      tags:
        - DID Wallet
      summary: Gets the name of a DID wallet.
      description: Gets the name of a DID wallet.
      operationId: did_get_wallet_name
      requestBody:
        $ref: "#/components/requestBodies/wallet_id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/apiResponse"
                  - type: object
                    properties:
                      wallet_id:
                        type: integer
                        format: uint32
                      name:
                        type: string
  /did_update_metadata:
    post:
      tags:
        - DID Wallet
      summary: Updates the metadata for a DID wallet.
      description: Updates the metadata for a DID wallet.
      operationId: did_update_metadata
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - wallet_id
              properties:
                wallet_id:
                  type: integer
                  format: uint32
                metadata:
                  type: object
                  additionalProperties:
                    type: string
                fee:
                  type: integer
                  format: uint64
                  default: 0
                reuse_puzhash:
                  type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/apiResponse"
                  - type: object
                    properties:
                      wallet_id:
                        type: integer
                        format: uint32
                      spend_bundle:
                        $ref: "#/components/schemas/spend_bundle"
  /did_get_metadata:
    post:
      tags:
        - DID Wallet
      summary: Gets the metadata of a DID wallet.
      description: Gets the metadata of a DID wallet.
      operationId: did_get_metadata
      requestBody:
        $ref: "#/components/requestBodies/wallet_id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/apiResponse"
                  - type: object
                    properties:
                      wallet_id:
                        type: integer
                        format: uint32
                      metadata:
                        type: object
                        additionalProperties:
                          type: string
  /take_offer:
    post:
      tags:
        - CAT Wallet
      summary: Takes an offer.
      description: Takes an offer.
      operationId: take_offer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - offer
              properties:
                offer:
                  type: string
                  format: hex
                fee:
                  type: integer
                  format: uint64
                  default: 0
                min_coin_amount:
                  type: integer
                  format: uint64
                  default: 0
                max_coin_amount:
                  type: integer
                  format: uint64
                  default: 0
                solver:
                  type: object
                  additionalProperties:
                    type: object
                reuse_puzhash:
                  type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      trade_record:
                        $ref: "#/components/schemas/trade_record"
                  - $ref: "#/components/schemas/apiResponse"
  /get_offers_count:
    post:
      tags:
        - CAT Wallet
      summary: Retrieves the number of offers.
      description: Retrieves the number of offers.
      operationId: get_offers_count
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      total:
                        type: integer
                      my_offers_count:
                        type: integer
                      taken_offers_count:
                        type: integer
                  - $ref: "#/components/schemas/apiResponse"
  /get_cat_list:
    post:
      tags:
        - CAT Wallet
      summary: Retrieves the list of CATs.
      description: Retrieves the list of CATs.
      operationId: get_cat_list
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      cat_list:
                        type: array
                        description: Default list of CATs
                        items:
                          $ref: "#/components/schemas/cat_info"
                  - $ref: "#/components/schemas/apiResponse"
  /cancel_offer:
    post:
      tags:
        - CAT Wallet
      summary: Cancels an offer.
      description: Cancels an offer.
      operationId: cancel_offer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - trade_id
                - secure
              properties:
                trade_id:
                  type: string
                  format: hex
                fee:
                  type: integer
                  format: uint64
                  default: 0
                secure:
                  type: boolean
      responses:
        "200":
          $ref: "#/components/responses/empty"
  /cancel_offers:
    post:
      tags:
        - CAT Wallet
      summary: Cancels multiple offers.
      description: Cancels multiple offers.
      operationId: cancel_offers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - secure
              properties:
                batch_fee:
                  type: integer
                  format: uint64
                  default: 0
                secure:
                  type: boolean
                batch_size:
                  type: integer
                  format: int32
                  default: 5
                cancel_all:
                  type: boolean
                  default: false
                asset_id:
                  type: string
                  default: "xch"
      responses:
        "200":
          $ref: "#/components/responses/empty"
  /select_coins:
    post:
      tags:
        - CAT Wallet
      summary: Returns a set of coins that can be used for generating a new transaction.
      description: Returns a set of coins that can be used for generating a new transaction.
      operationId: select_coins
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - wallet_id
                - amount
              properties:
                wallet_id:
                  type: integer
                  format: uint32
                amount:
                  type: integer
                  format: uint64
                min_coin_amount:
                  type: integer
                  format: uint64
                  default: 0
                excluded_coins:
                  type: array
                  items:
                    $ref: "#/components/schemas/coin"
                max_coin_amount:
                  type: integer
                  format: uint64
                  default: 0
                excluded_coin_amounts:
                  type: array
                  items:
                    type: integer
                    format: uint64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      coins:
                        type: array
                        items:
                          $ref: "#/components/schemas/coin"
                  - $ref: "#/components/schemas/apiResponse"
  /get_offer:
    post:
      tags:
        - CAT Wallet
      summary: Retrieves an offer.
      description: Retrieves an offer.
      operationId: get_offer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - trade_id
              properties:
                trade_id:
                  type: string
                  format: hex
                file_contents:
                  type: boolean
                  description: Indicator as to whether to return the offer contents
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      trade_record:
                        $ref: "#/components/schemas/trade_record"
                      offer:
                        type: string
                  - $ref: "#/components/schemas/apiResponse"
  /get_all_offers:
    post:
      tags:
        - CAT Wallet
      summary: Retrieves offers.
      description: Retrieves offers.
      operationId: get_all_offers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                start:
                  type: integer
                  default: 0
                end:
                  type: integer
                  default: 10
                exclude_my_offers:
                  type: boolean
                exclude_taken_offers:
                  type: boolean
                include_completed:
                  type: boolean
                sort_key:
                  type: string
                reverse:
                  type: boolean
                file_contents:
                  type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      trade_records:
                        type: array
                        items:
                          $ref: "#/components/schemas/trade_record"
                      offers:
                        type: array
                        items:
                          type: string
                  - $ref: "#/components/schemas/apiResponse"
  /check_offer_validity:
    post:
      tags:
        - CAT Wallet
      summary: Checks the validity of an offer.
      description: Checks the validity of an offer.
      operationId: check_offer_validity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - offer
              properties:
                offer:
                  type: string
                  format: hex
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      valid:
                        type: boolean
                      id:
                        type: string
                  - $ref: "#/components/schemas/apiResponse"
  /get_offer_summary:
    post:
      tags:
        - CAT Wallet
      summary: Get the summary of a given offer.
      description: Get the summary of a given offer.
      operationId: get_offer_summary
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - offer
              properties:
                offer:
                  type: string
                  format: hex
                advanced:
                  type: boolean
                  default: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      id:
                        type: string
                      summary:
                        properties:
                          offered:
                            type: object
                            additionalProperties:
                              type: integer
                              format: uint64
                          requested:
                            type: object
                            additionalProperties:
                              type: integer
                              format: uint64
                          fees:
                            type: integer
                            format: uint64
                          infos:
                            type: object
                            additionalProperties:
                              type: object
                              additionalProperties: true
                  - $ref: "#/components/schemas/apiResponse"
  /create_offer_for_ids:
    post:
      tags:
        - CAT Wallet
      summary: Creates an offer.
      description: Creates an offer for the given set of wallet id and amount pairs.
      operationId: create_offer_for_ids
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - offer
              properties:
                offer:
                  type: object
                  additionalProperties:
                    type: integer
                fee:
                  type: integer
                  format: uint64
                  default: 0
                validate_only:
                  type: boolean
                  default: false
                driver_dict:
                  type: object
                  additionalProperties:
                    type: string
                min_coin_amount:
                  type: integer
                  format: uint128
                  default: 0
                max_coin_amount:
                  type: integer
                  format: uint128
                  default: 0
                solver:
                  type: object
                  additionalProperties:
                    type: object
                reuse_puzhash:
                  type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      offer:
                        type: string
                      trade_record:
                        $ref: "#/components/schemas/trade_record"
                  - $ref: "#/components/schemas/apiResponse"
  /cat_asset_id_to_name:
    post:
      tags:
        - CAT Wallet
      summary: Gets the name and wallet id associated with an asset id.
      description: Gets the name and wallet id associated with an asset id.
      operationId: cat_asset_id_to_name
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - asset_id
              properties:
                asset_id:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      wallet_id:
                        type: integer
                        format: uint32
                      name:
                        type: string
                  - $ref: "#/components/schemas/apiResponse"
  /cat_get_asset_id:
    post:
      tags:
        - CAT Wallet
      summary: Gets the asset id of the CAT wallet.
      description: Gets the asset id of the CAT wallet.
      operationId: cat_get_asset_id
      requestBody:
        $ref: "#/components/requestBodies/wallet_id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      wallet_id:
                        type: integer
                        format: uint32
                      asset_id:
                        type: string
                  - $ref: "#/components/schemas/apiResponse"
  /cat_spend:
    post:
      tags:
        - CAT Wallet
      summary: Spends an amount from the given wallet.
      description: Spends an amount from the given wallet.
      operationId: cat_spend
      requestBody:
        description: Request body with the Id of a wallet.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - wallet_id
                - amount
                - inner_address
              properties:
                wallet_id:
                  type: integer
                  format: uint32
                coins:
                  type: array
                  items:
                    $ref: "#/components/schemas/coin"
                amount:
                  type: integer
                  format: uint64
                fee:
                  type: integer
                  format: uint64
                  default: 0
                inner_address:
                  type: string
                  format: hex
                memos:
                  type: array
                  items:
                    type: string
                min_coin_amount:
                  type: integer
                  format: uint128
                  default: 0
                max_coin_amount:
                  type: integer
                  format: uint128
                  default: 0
                excluded_coin_amounts:
                  type: array
                  items:
                    type: integer
                    format: uint64
                excluded_coin_ids:
                  type: array
                  items:
                    type: string
                    format: hex
                reuse_puzhash:
                  type: boolean
      responses:
        "200":
          $ref: "#/components/responses/transaction_record_response"
  /cat_set_name:
    post:
      tags:
        - CAT Wallet
      summary: Sets the name of the CAT wallet.
      description: Sets the name of the CAT wallet.
      operationId: cat_set_name
      requestBody:
        description: Request body with the Id of a wallet
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - wallet_id
                - name
              properties:
                wallet_id:
                  type: integer
                  format: uint32
                name:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      wallet_id:
                        type: integer
                        format: uint32
                  - $ref: "#/components/schemas/apiResponse"
  /cat_get_name:
    post:
      tags:
        - CAT Wallet
      summary: Gets the name of the CAT wallet.
      description: Gets the name of the CAT wallet.
      operationId: cat_get_name
      requestBody:
        $ref: "#/components/requestBodies/wallet_id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      wallet_id:
                        type: integer
                        format: uint32
                      name:
                        type: string
                  - $ref: "#/components/schemas/apiResponse"
  /get_stray_cats:
    post:
      tags:
        - CAT Wallet
      summary: Get a list of all unacknowledged CATs.
      description: Get a list of all unacknowledged CATs.
      operationId: get_stray_cats
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      stray_cats:
                        type: array
                        items:
                          $ref: "#/components/schemas/token"
                  - $ref: "#/components/schemas/apiResponse"
  /pw_join_pool:
    post:
      tags:
        - Pool Wallet
      summary: Joins the given wallet to a pool.
      description: Joins the given wallet to a pool.
      operationId: pw_join_pool
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - wallet_id
                - pool_url
                - relative_lock_height
              properties:
                wallet_id:
                  type: integer
                  format: uint32
                target_puzzlehash:
                  type: string
                  format: hex
                pool_url:
                  type: string
                  format: url
                relative_lock_height:
                  type: integer
                  format: uint32
                fee:
                  type: integer
                  format: uint64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      transaction:
                        $ref: "#/components/schemas/transaction_record"
                      total_fee:
                        type: integer
                        format: uint64
                  - $ref: "#/components/schemas/apiResponse"
  /pw_self_pool:
    post:
      tags:
        - Pool Wallet
      summary: Removes the given wallet to a pool.
      description: Removes the given wallet to a pool.
      operationId: pw_self_pool
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - wallet_id
              properties:
                wallet_id:
                  type: integer
                  format: uint32
                fee:
                  type: integer
                  format: uint64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      transaction:
                        $ref: "#/components/schemas/transaction_record"
                      total_fee:
                        type: integer
                        format: uint64
                  - $ref: "#/components/schemas/apiResponse"
  /pw_absorb_rewards:
    post:
      tags:
        - Pool Wallet
      summary: Perform a sweep of the p2_singleton rewards controlled by the pool wallet singleton.
      description: Perform a sweep of the p2_singleton rewards controlled by the pool wallet singleton.
      operationId: pw_absorb_rewards
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - wallet_id
              properties:
                wallet_id:
                  type: integer
                  format: uint32
                fee:
                  type: integer
                  format: uint64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      transaction:
                        $ref: "#/components/schemas/transaction_record"
                      state:
                        $ref: "#/components/schemas/pool_wallet_info"
                  - $ref: "#/components/schemas/apiResponse"
  /pw_status:
    post:
      tags:
        - Pool Wallet
      summary: Return the complete state of the given Pool wallet.
      description: Return the complete state of the given Pool wallet.
      operationId: pw_status
      requestBody:
        $ref: "#/components/requestBodies/wallet_id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      unconfirmed_transactions:
                        type: array
                        items:
                          $ref: "#/components/schemas/transaction_record"
                      state:
                        $ref: "#/components/schemas/pool_wallet_info"
                  - $ref: "#/components/schemas/apiResponse"
  /get_current_derivation_index:
    post:
      tags:
        - Wallet
      summary: Gets the current derivation index.
      description: Gets the current derivation index.
      operationId: get_current_derivation_index
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      index:
                        type: integer
                        format: uint32
                  - $ref: "#/components/schemas/apiResponse"
  /extend_derivation_index:
    post:
      tags:
        - Wallet
      summary: Extends the current derivation index.
      description: Extends the current derivation index.
      operationId: extend_derivation_index
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - index
              properties:
                index:
                  type: integer
                  format: uint32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      index:
                        type: integer
                        format: uint32
                  - $ref: "#/components/schemas/apiResponse"
  /create_signed_transaction:
    post:
      tags:
        - Wallet
      summary: Creates and signs a transaction.
      description: Creates and signs a transaction.
      operationId: create_signed_transaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - additions
              properties:
                wallet_id:
                  type: integer
                additions:
                  type: array
                  items:
                    $ref: "#/components/schemas/amount_with_puzzlehash"
                coins:
                  type: array
                  items:
                    $ref: "#/components/schemas/coin"
                coin_announcements:
                  type: array
                  items:
                    $ref: "#/components/schemas/coin_announcement"
                puzzle_announcements:
                  type: array
                  items:
                    $ref: "#/components/schemas/puzzle_announcement"
                min_coin_amount:
                  type: integer
                  format: uint64
                  default: 0
                max_coin_amount:
                  type: integer
                  format: uint64
                  default: 0
                excluded_coins:
                  type: array
                  items:
                    $ref: "#/components/schemas/coin"
                excluded_coin_amounts:
                  type: array
                  items:
                    type: integer
                    format: uint64
                fee:
                  type: integer
                  format: uint64
                  default: 0
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      signed_txs:
                        type: array
                        items:
                          $ref: "#/components/schemas/transaction_record"
                      signed_tx:
                        $ref: "#/components/schemas/transaction_record"
                  - $ref: "#/components/schemas/apiResponse"
  /send_transaction:
    post:
      tags:
        - Wallet
      summary: Sends an amount of mojo from the given wallet to the given address.
      description: Sends an amount of mojo from the given wallet to the given address.
      operationId: send_transaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - wallet_id
                - amount
                - address
              properties:
                wallet_id:
                  type: integer
                  format: uint32
                amount:
                  type: integer
                  format: uint64
                address:
                  type: string
                  format: hex
                fee:
                  type: integer
                  format: uint64
                memos:
                  type: array
                  items:
                    type: string
                min_coin_amount:
                  type: integer
                  format: uint64
                  default: 0
                max_coin_amount:
                  type: integer
                  format: uint64
                  default: 0
                excluded_coin_amounts:
                  type: array
                  items:
                    type: integer
                    format: uint64
                excluded_coin_ids:
                  type: array
                  items:
                    type: string
                    format: hex
                reuse_puzhash:
                  type: boolean
      responses:
        "200":
          $ref: "#/components/responses/transaction_record_response"
  /send_transaction_multi:
    post:
      tags:
        - Wallet
      summary: Sends multiple transactions from then given wallet.
      description: Sends multiple transactions from then given wallet.
      operationId: send_transaction_multi
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - wallet_id
              properties:
                wallet_id:
                  type: integer
                  format: uint32
                additions:
                  type: array
                  items:
                    $ref: "#/components/schemas/amount_with_puzzlehash"
                fee:
                  type: integer
                  format: uint64
                  default: 0
                coins:
                  type: array
                  items:
                    $ref: "#/components/schemas/coin"
                coin_announcements:
                  type: array
                  items:
                    $ref: "#/components/schemas/coin_announcement"
                puzzle_announcements:
                  type: array
                  items:
                    $ref: "#/components/schemas/puzzle_announcement"

      responses:
        "200":
          $ref: "#/components/responses/transaction_record_response"
  /get_wallet_balance:
    post:
      tags:
        - Wallet
      summary: Retrieves the balance of a specific wallet.
      description: Retrieves the balance of a specific wallet (in units of mojos).
      operationId: get_wallet_balance
      requestBody:
        $ref: "#/components/requestBodies/wallet_id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - wallet_balance
                    properties:
                      wallet_balance:
                        $ref: "#/components/schemas/wallet_balance"
                  - $ref: "#/components/schemas/apiResponse"
  /get_wallet_balances:
    post:
      tags:
        - Wallet
      summary: Retrieves the balance of a specific list of wallets.
      description: Retrieves the balance of a specific list of wallets (in units of mojos).
      operationId: get_wallet_balances
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - wallet_ids
              properties:
                wallet_ids:
                  type: array
                  items:
                    type: integer
                    format: uint32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      wallet_balances:
                        type: array
                        items:
                          $ref: "#/components/schemas/wallet_balance"
                  - $ref: "#/components/schemas/apiResponse"
  /get_farmed_amount:
    post:
      tags:
        - Wallet
      summary: Retrieves the amount farmed.
      description: Retrieves the amount farmed.
      operationId: get_farmed_amount
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/farmer_rewards"
                  - $ref: "#/components/schemas/apiResponse"
  /delete_unconfirmed_transactions:
    post:
      tags:
        - Wallet
      summary: Delete all unconfirmed transactions for a given wallet.
      description: Delete all unconfirmed transactions for a given wallet.
      operationId: delete_unconfirmed_transactions
      requestBody:
        $ref: "#/components/requestBodies/wallet_id"
      responses:
        "200":
          $ref: "#/components/responses/empty"
  /get_transaction:
    post:
      tags:
        - Wallet
      summary: Retrieves a specific transaction.
      description: Retrieves a specific transaction.
      operationId: get_transaction
      requestBody:
        $ref: "#/components/requestBodies/transaction_id"
      responses:
        "200":
          $ref: "#/components/responses/transaction_record_response"
  /get_spendable_coins:
    post:
      tags:
        - Wallet
      summary: Retrieves all spendable coins in a wallet.
      description: Retrieves all spendable coins in a wallet.
      operationId: get_spendable_coins
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - wallet_id
              properties:
                wallet_id:
                  type: integer
                  format: uint32
                min_coin_amount:
                  type: integer
                  format: uint64
                  default: 0
                max_coin_amount:
                  type: integer
                  format: uint64
                  default: 0
                excluded_coin_amounts:
                  type: array
                  items:
                    type: integer
                    format: uint64
                    default: 0
                excluded_coins:
                  type: array
                  items:
                    $ref: "#/components/schemas/coin"
                excluded_coin_ids:
                  type: array
                  items:
                    type: string
                    format: hex
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      confirmed_records:
                        type: array
                        items:
                          $ref: "#/components/schemas/coin_record"
                      unconfirmed_removals:
                        type: array
                        items:
                          $ref: "#/components/schemas/coin_record"
                      unconfirmed_additions:
                        type: array
                        items:
                          $ref: "#/components/schemas/coin"
                  - $ref: "#/components/schemas/apiResponse"
  /get_transactions:
    post:
      tags:
        - Wallet
      summary: Retrieves a list of transactions from a wallet.
      description: Retrieves a list of transactions from a wallet.
      operationId: get_transactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - wallet_id
              properties:
                wallet_id:
                  type: integer
                  format: uint32
                to_address:
                  type: string
                  format: hex
                start:
                  type: integer
                  format: uint32
                  default: 0
                end:
                  type: integer
                  format: uint32
                  default: 50
                sort_key:
                  type: string
                reverse:
                  type: boolean
                type_filter:
                  $ref: "#/components/schemas/transaction_type_filter"
                confirmed:
                  type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      transactions:
                        type: array
                        items:
                          $ref: "#/components/schemas/transaction_record"
                      wallet_id:
                        type: integer
                        format: uint32
                  - $ref: "#/components/schemas/apiResponse"
  /get_transaction_count:
    post:
      tags:
        - Wallet
      summary: Retrieves the number of transactions for a wallet.
      description: Retrieves the number of transactions for a wallet.
      operationId: get_transaction_count
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                wallet_id:
                  type: integer
                  format: uint32
                type_filter:
                  $ref: "#/components/schemas/transaction_type_filter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      count:
                        type: integer
                      wallet_id:
                        type: integer
                        format: uint32
                  - $ref: "#/components/schemas/apiResponse"
  /get_next_address:
    post:
      tags:
        - Wallet
      summary: Returns a new address.
      description: Returns a new address.
      operationId: get_next_address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - wallet_id
              properties:
                wallet_id:
                  type: integer
                  format: uint32
                new_address:
                  type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      wallet_id:
                        type: integer
                        format: uint32
                      address:
                        type: string
                        format: hex
                  - $ref: "#/components/schemas/apiResponse"
  /get_network_info:
    post:
      tags:
        - Wallet Node
      summary: Retrieves some information about the current network.
      description: Retrieves some information about the current network.
      operationId: wallet_get_network_info
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/network_info"
                  - $ref: "#/components/schemas/apiResponse"
  /log_in:
    post:
      tags:
        - Key Management
      summary: Logs in the wallet with a specific key.
      description: Logs in the wallet with a specific key.
      operationId: log_in
      requestBody:
        $ref: "#/components/requestBodies/fingerprint"
      responses:
        "200":
          $ref: "#/components/responses/fingerprint_response"
  /get_logged_in_fingerprint:
    post:
      tags:
        - Key Management
      summary: Retrieves the logged in fingerprint.
      description: Retrieves the logged in fingerprint.
      operationId: get_logged_in_fingerprint
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          $ref: "#/components/responses/fingerprint_response"
  /get_public_keys:
    post:
      tags:
        - Key Management
      summary: Retrieves all public keys on the node.
      description: Retrieves all public keys on the node.
      operationId: get_public_keys
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      public_key_fingerprints:
                        type: array
                        items:
                          type: integer
                          format: uint32
                  - type: object
                    properties:
                      keyring_is_locked:
                        type: boolean
                allOf:
                  - $ref: "#/components/schemas/apiResponse"
  /get_private_key:
    post:
      tags:
        - Key Management
      summary: Retrieves the private key by fingerprint.
      description: Retrieves the private key by fingerprint.
      operationId: get_private_key
      requestBody:
        $ref: "#/components/requestBodies/fingerprint"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    description: Return type if the private key is found.
                    properties:
                      private_key:
                        $ref: "#/components/schemas/private_key"
                  - type: object
                    description: Return type if the private key is not found.
                    properties:
                      private_key:
                        type: object
                        properties:
                          fingerprint:
                            type: integer
                            format: uint32
                allOf:
                  - $ref: "#/components/schemas/apiResponse"
  /generate_mnemonic:
    post:
      tags:
        - Key Management
      summary: Generates a new mnemonic phrase.
      description: Generates a new mnemonic phrase.
      operationId: generate_mnemonic
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mnemonic"
  /add_key:
    post:
      tags:
        - Key Management
      summary: Generates a new mnemonic phrase.
      description: Generates a new mnemonic phrase.
      operationId: add_key
      requestBody:
        description: The mnemonic phrase.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/mnemonic"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: The fingerprint of the new key.
                    properties:
                      private_key:
                        type: object
                        properties:
                          fingerprint:
                            type: integer
                            format: uint32
                  - $ref: "#/components/schemas/apiResponse"
  /delete_key:
    post:
      tags:
        - Key Management
      summary: Deletes all keys which have the given public key fingerprint.
      description: Deletes all keys which have the given public key fingerprint.
      operationId: delete_key
      requestBody:
        $ref: "#/components/requestBodies/fingerprint"
      responses:
        "200":
          $ref: "#/components/responses/empty"
  /check_delete_key:
    post:
      tags:
        - Key Management
      summary: Determines if it is safe to delete a private key.
      description: Determines if it is safe to delete a private key. Returns whether it is used for farming, pooling, or has a balance.
      operationId: check_delete_key
      requestBody:
        $ref: "#/components/requestBodies/fingerprint"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      fingerprint:
                        type: integer
                        format: uint32
                      used_for_farmer_rewards:
                        type: boolean
                      used_for_pool_rewards:
                        type: boolean
                      wallet_balance:
                        type: boolean
                  - $ref: "#/components/schemas/apiResponse"
  /delete_all_keys:
    post:
      tags:
        - Key Management
      summary: Deletes all keys from the keychain.
      description: Deletes all keys from the keychain.
      operationId: wallet_delete_all_keys
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          $ref: "#/components/responses/empty"
  /get_sync_status:
    post:
      tags:
        - Wallet Node
      summary: Retrieves the sync status of the wallet.
      description: Retrieves the sync status of the wallet.
      operationId: get_sync_status
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      synced:
                        type: boolean
                      syncing:
                        type: boolean
                      genesis_initialized:
                        type: boolean
                  - $ref: "#/components/schemas/apiResponse"
  /get_height_info:
    post:
      tags:
        - Wallet Node
      summary: Retrieves the sync height of the wallet.
      description: Retrieves the sync height of the wallet.
      operationId: get_height_info
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      height:
                        type: integer
                        format: uint32
                  - $ref: "#/components/schemas/apiResponse"
  /push_tx:
    post:
      tags:
        - Wallet Node
      description: Pushes a transaction/spend bundle to the mempool and blockchain. Returns whether the spend bundle was successfully included into the mempool.
      summary: Pushes a transaction/spend bundle to the mempool and blockchain.
      operationId: wallet_push_tx
      requestBody:
        required: true
        description: The spend bundle
        content:
          application/json:
            schema:
              type: object
              required:
                - spend_bundle
              properties:
                spend_bundle:
                  $ref: "#/components/schemas/spend_bundle"
      responses:
        "200":
          $ref: "#/components/responses/empty"
  /push_transactions:
    post:
      tags:
        - Wallet Node
      description: Pushes multiple transactions spend bundle to the mempool and blockchain.
      summary: Pushes multiple transactions spend bundle to the mempool and blockchain.
      operationId: push_transactions
      requestBody:
        required: true
        description: The transaction list
        content:
          application/json:
            schema:
              type: object
              required:
                - transactions
              properties:
                transactions:
                  type: array
                  items:
                    $ref: "#/components/schemas/transaction_record"
      responses:
        "200":
          $ref: "#/components/responses/empty"
  /get_notifications:
    post:
      tags:
        - Notifications
      description: Retrieves notifications.
      summary: Retrieves notifications.
      operationId: get_notifications
      requestBody:
        required: true
        description: Notification query inputs
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  type: array
                  items:
                    type: string
                start:
                  type: integer
                end:
                  type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      notifications:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              format: hex
                            message:
                              type: string
                              format: hex
                            amount:
                              type: integer
                              format: uint64
                            height:
                              type: integer
                              format: uint32
                  - $ref: "#/components/schemas/apiResponse"
  /delete_notifications:
    post:
      tags:
        - Notifications
      description: Deletes notifications.
      summary: Deletes notifications.
      operationId: delete_notifications
      requestBody:
        required: true
        description: The notifications to delete
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  type: array
                  items:
                    type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiResponse"
  /send_notification:
    post:
      tags:
        - Notifications
      description: Sends a notification.
      summary: Sends a notification.
      operationId: send_notification
      requestBody:
        required: true
        description: The notification to send
        content:
          application/json:
            schema:
              type: object
              required:
                - target
                - message
                - amount
              properties:
                target:
                  type: string
                  format: hex
                message:
                  type: string
                  format: hex
                amount:
                  type: integer
                  format: uint64
                fee:
                  type: integer
                  format: uint64
                  default: 0
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      tx:
                        $ref: "#/components/schemas/transaction_record"
                  - $ref: "#/components/schemas/apiResponse"
  /sign_message_by_address:
    post:
      tags:
        - Notifications
      description: Given a derived P2 address, sign the message by its private key.
      summary: Given a derived P2 address, sign the message by its private key.
      operationId: sign_message_by_address
      requestBody:
        required: true
        description: The message
        content:
          application/json:
            schema:
              type: object
              required:
                - address
                - message
              properties:
                address:
                  type: string
                  format: hex
                message:
                  type: string
                is_hex:
                  type: boolean
                  default: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      pubkey:
                        type: string
                        format: hex
                      signature:
                        type: string
                        format: hex
                      signing_mode:
                        type: string
                        default: BLS_SIG_BLS12381G2_XMD:SHA-256_SSWU_RO_AUG:CHIP-0002_
                  - $ref: "#/components/schemas/apiResponse"
  /sign_message_by_id:
    post:
      tags:
        - Notifications
      description: Given a NFT/DID ID, sign the message by the P2 private key.
      summary: Given a NFT/DID ID, sign the message by the P2 private key.
      operationId: sign_message_by_id
      requestBody:
        required: true
        description: The message
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - message
              properties:
                id:
                  type: string
                  format: hex
                message:
                  type: string
                is_hex:
                  type: boolean
                  default: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      pubkey:
                        type: string
                        format: hex
                      signature:
                        type: string
                        format: hex
                      latest_coin_id:
                        type: string
                        format: hex
                      signing_mode:
                        type: string
                        default: BLS_SIG_BLS12381G2_XMD:SHA-256_SSWU_RO_AUG:CHIP-0002_
                  - $ref: "#/components/schemas/apiResponse"
  /get_coin_records_by_names:
    post:
      tags:
        - Coins
      description: Retrieves the coins for given coin IDs, by default returns unspent coins.
      summary: Retrieves the coins for given coin IDs.
      operationId: get_coin_records_by_names
      requestBody:
        required: true
        description: The coin names.
        content:
          application/json:
            schema:
              allOf:
                - type: object
                  required:
                    - names
                  properties:
                    names:
                      type: array
                      items:
                        type: string
                        format: hex
                - $ref: "#/components/schemas/coin_search_options"
      responses:
        "200":
          $ref: "#/components/responses/coin_records"
  /get_coin_records:
    post:
      tags:
        - Coins
      description: Retrieves the coins that match given filter criteria
      summary: Retrieves the coins that match given filter criteria.
      operationId: get_coin_records
      requestBody:
        required: true
        description: The coin names.
        content:
          application/json:
            schema:
              type: object
              properties:
                offset:
                  type: integer
                  format: uint32
                  default: 0
                limit:
                  type: integer
                  format: uint32
                wallet_id:
                  type: integer
                  format: uint32
                wallet_type:
                  $ref: "#/components/schemas/wallet_type"
                coin_type:
                  $ref: "#/components/schemas/coin_type"
                coin_id_filter:
                  $ref: "#/components/schemas/hash_filter"
                puzzle_hash_filter:
                  $ref: "#/components/schemas/hash_filter"
                parent_coin_id_filter:
                  $ref: "#/components/schemas/hash_filter"
                amount_filter:
                  $ref: "#/components/schemas/amount_filter"
                amount_range:
                  $ref: "#/components/schemas/uint64_range"
                confirmed_range:
                  $ref: "#/components/schemas/uint32_range"
                spent_range:
                  $ref: "#/components/schemas/uint32_range"
                order:
                  $ref: "#/components/schemas/coin_record_order"
                reverse:
                  type: boolean
                  default: false
                include_total_count:
                  type: boolean
                  description: Include the total number of entries for the query without applying offset/limit
                  default: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      coin_records:
                        type: array
                        items:
                          $ref: "#/components/schemas/coin_record"
                      total_count:
                        type: integer
                        format: uint32
                  - $ref: "#/components/schemas/apiResponse"
  /verify_signature:
    post:
      tags:
        - Key Management
      description: Given a public key, message and signature, verify if it is valid.
      summary: Given a public key, message and signature, verify if it is valid.
      operationId: verify_signature
      requestBody:
        required: true
        description: The coin names.
        content:
          application/json:
            schema:
              required:
                - pubkey
                - message
                - signature
              properties:
                pubkey:
                  type: string
                  format: hex
                message:
                  type: string
                  format: hex
                signature:
                  type: string
                  format: hex
                address:
                  type: string
                  format: hex
                signing_mode:
                  type: string
                  example: BLS_SIG_BLS12381G2_XMD:SHA-256_SSWU_RO_AUG:CHIP-0002_
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  isValid:
                    type: boolean
  /get_wallets:
    post:
      tags:
        - Wallet Management
      description: Retrieves all of the wallets on the node.
      summary: Retrieves all of the wallets on the node.
      operationId: get_wallets
      requestBody:
        description: Optional wallet type to filter by
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  $ref: "#/components/schemas/wallet_type"
                include_data:
                  type: boolean
                  default: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      fingerprint:
                        type: integer
                        format: uint32
                      wallets:
                        type: array
                        items:
                          $ref: "#/components/schemas/wallet_info"
                  - $ref: "#/components/schemas/apiResponse"
  /create_new_wallet:
    post:
      tags:
        - Wallet Management
      description: Creates a new wallet.
      summary: Creates a new wallet.
      operationId: create_new_wallet
      requestBody:
        required: true
        description: Details of the wallet to create.
        content:
          application/json:
            schema:
              type: object
              required:
                - wallet_type
              properties:
                wallet_type:
                  type: string
                  description: The type of wallet to create.
                  enum:
                    - cat_wallet
                    - did_wallet
                    - pool_wallet
                    - nft_wallet
                name:
                  type: string
                  description: User supplied name for the wallet. Will default if not provided.
                amount:
                  type: integer
                  format: uint64
                  description: The amount of mojo to deposit in the new wallet.
                fee:
                  type: integer
                  format: uint64
                  default: 0
                  description: The transaction fee amount in mojo.
              oneOf:
                - type: object
                  description: Details needed to create a cat_wallet.
                  properties:
                    mode:
                      type: string
                      enum:
                        - new
                        - existing
                    asset_id:
                      type: string
                      description: Only used when `mode` is 'existing'
                - type: object
                  description: Details needed to create a did_wallet.
                  required:
                    - did_type
                  properties:
                    did_type:
                      type: string
                      description: The type of DID wallet to create.
                      enum:
                        - new
                        - recovery
                  oneOf:
                    - type: object
                      description: Details needed for creating a new DID wallet.
                      properties:
                        backup_dids:
                          type: array
                          items:
                            type: string
                            format: hex
                        num_of_backup_ids_needed:
                          type: integer
                          format: uint64
                        metadata:
                          type: object
                          additionalProperties:
                            type: string
                        wallet_name:
                          type: string
                        fee:
                          type: integer
                          format: uint64
                          default: 0
                    - type: object
                      description: Details needed to create a recovery DID wallet.
                      properties:
                        backup_data:
                          type: string
                - type: object
                  description: Details needed to create a pool wallet.
                  required:
                    - mode
                  properties:
                    mode:
                      type: string
                      description: The pooling mode.
                      enum:
                        - new
                        - recovery
                    initial_target_state:
                      $ref: "#/components/schemas/pool_state"
                    p2_singleton_delayed_ph:
                      type: string
                      format: hex
                    p2_singleton_delay_time:
                      type: integer
                      format: uint64
                - type: object
                  description: Details needed to create an NFT wallet.
                  properties:
                    did_id:
                      type: string
                      format: hex
                    name:
                      type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    description: Response when a CAT wallet is created.
                    properties:
                      type:
                        $ref: "#/components/schemas/wallet_type"
                      asset_id:
                        type: string
                        format: hex
                      wallet_id:
                        type: integer
                        format: uint32
                  - type: object
                    description: Response when a new DID wallet is created.
                    properties:
                      type:
                        $ref: "#/components/schemas/wallet_type"
                      my_did:
                        type: string
                        format: hex
                      wallet_id:
                        type: integer
                        format: uint32
                  - type: object
                    description: Response when a recovery DID wallet is created.
                    properties:
                      type:
                        $ref: "#/components/schemas/wallet_type"
                      my_did:
                        type: string
                        format: hex
                      wallet_id:
                        type: integer
                        format: uint32
                      coin_name:
                        type: string
                        format: hex
                      coin_list:
                        $ref: "#/components/schemas/coin"
                      newpuzhash:
                        type: string
                        format: hex
                      pubkey:
                        type: string
                        format: hex
                      backup_dids:
                        type: array
                        items:
                          type: string
                          format: hex
                      num_verifications_required:
                        type: integer
                        format: uint64
                  - type: object
                    description: Response when a new pool wallet is created.
                    properties:
                      total_fee:
                        type: integer
                        format: uint64
                      transaction:
                        $ref: "#/components/schemas/transaction_record"
                      launcher_id:
                        type: string
                        format: hex
                      p2_singleton_puzzle_hash:
                        type: string
                        format: hex
                  - type: object
                    description: Response when a new nft wallet is created.
                    properties:
                      type:
                        $ref: "#/components/schemas/wallet_type"
                      wallet_id:
                        type: integer
                        format: uint32
                allOf:
                  - $ref: "#/components/schemas/apiResponse"
  /did_message_spend:
    post:
      tags:
        - DID Wallet
      description: Spends a DID message
      summary: Spends a DID message.
      operationId: did_message_spend
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - wallet_id
              properties:
                wallet_id:
                  type: integer
                  format: uint32
                coin_announcements:
                  type: array
                  items:
                    type: string
                    format: hex
                puzzle_announcements:
                  type: array
                  items:
                    type: string
                    format: hex
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      spend_bundle:
                        $ref: "#/components/schemas/spend_bundle"
                  - $ref: "#/components/schemas/apiResponse"
  /did_get_info:
    post:
      tags:
        - DID Wallet
      description: Retrieves information about a DID
      summary: Retrieves information about a DID.
      operationId: did_get_info
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - coin_id
              properties:
                coin_id:
                  type: string
                  format: hex
                latest:
                  type: boolean
                  default: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      latest_coin:
                        type: string
                        format: hex
                      p2_address:
                        type: string
                        format: hex
                      public_key:
                        type: string
                        format: hex
                      recovery_list_hash:
                        type: string
                        format: hex
                      num_verification:
                        type: integer
                      metadata:
                        type: object
                        additionalProperties: true
                      launcher_id:
                        type: string
                        format: hex
                      full_puzzle:
                        type: string
                        format: hex
                      solution:
                        type: string
                      hints:
                        type: array
                        items:
                          type: string
                          format: hex
                      did_id:
                        type: string
                        format: hex
                  - $ref: "#/components/schemas/apiResponse"
  /did_find_lost_did:
    post:
      tags:
        - DID Wallet
      description: Recover a missing or unspendable DID wallet by a coin id of the DID
      summary: Recover a missing or unspendable DID wallet by a coin id of the DID.
      operationId: did_find_lost_did
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - coin_id
              properties:
                coin_id:
                  type: string
                  format: hex
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      latest_coin_id:
                        type: string
                        format: hex
                  - $ref: "#/components/schemas/apiResponse"
  /nft_set_did_bulk:
    post:
      tags:
        - NFT Wallet
      description: Bulk set DID for NFTs across different wallets
      summary: Bulk set DID for NFTs across different wallets.
      operationId: nft_set_did_bulk
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - nft_coin_list
              properties:
                nft_coin_list:
                  type: array
                  maxItems: 25
                  items:
                    type: object
                    required:
                      - nft_coin_id
                      - wallet_id
                    properties:
                      nft_coin_id:
                        type: string
                        format: hex
                      wallet_id:
                        type: integer
                        format: int32
                did_id:
                  type: string
                  format: hex
                fee:
                  type: integer
                  format: uint64
                  default: 0
                reuse_puzhash:
                  type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      wallet_id:
                        type: integer
                        format: int32
                      tx_num:
                        type: integer
                        format: int32
                      spend_bundle:
                        $ref: "#/components/schemas/spend_bundle"
                  - $ref: "#/components/schemas/apiResponse"
  /nft_transfer_bulk:
    post:
      tags:
        - NFT Wallet
      description: Bulk transfer NFTs to an address
      summary: Bulk transfer NFTs to an address.
      operationId: nft_transfer_bulk
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - nft_coin_list
              properties:
                nft_coin_list:
                  type: array
                  maxItems: 25
                  items:
                    type: object
                    required:
                      - nft_coin_id
                      - wallet_id
                    properties:
                      nft_coin_id:
                        type: string
                        format: hex
                      wallet_id:
                        type: integer
                        format: int32
                target_address:
                  type: string
                  format: hex
                fee:
                  type: integer
                  format: uint64
                  default: 0
                reuse_puzhash:
                  type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      wallet_id:
                        type: integer
                        format: int32
                      tx_num:
                        type: integer
                        format: int32
                      spend_bundle:
                        $ref: "#/components/schemas/spend_bundle"
                  - $ref: "#/components/schemas/apiResponse"
  /get_timestamp_for_height:
    post:
      tags:
        - Wallet Node
      description: Retrieve the timestamp for a given block height
      summary: Retrieve the timestamp for a given block height.
      operationId: get_timestamp_for_height
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - height
              properties:
                height:
                  type: integer
                  format: uint32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      timestamp:
                        type: integer
                        format: uint62
                  - $ref: "#/components/schemas/apiResponse"
  /set_wallet_resync_on_startup:
    post:
      tags:
        - Wallet Node
      description: Resync the current logged in wallet
      summary: Resync the current logged in wallet. The transaction and offer records will be kept.
      operationId: set_wallet_resync_on_startup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                enable:
                  type: boolean
                  default: true
      responses:
        "200":
          $ref: "#/components/responses/empty"
  /get_transaction_memo:
    post:
      tags:
        - Wallet
      description: Retrieves the memo from a transaction
      summary: Retrieves the memo from a transaction.
      operationId: get_transaction_memo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - transaction_id
              properties:
                transaction_id:
                  type: string
                  format: hex
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    additionalProperties:
                      type: object
                      additionalProperties:
                        type: array
                        items:
                          type: string
                  - $ref: "#/components/schemas/apiResponse"
  /nft_count_nfts:
    post:
      tags:
        - NFT Wallet
      description: Retrieves the number of NFTs in a wallet
      summary: Retrieves the number of NFTs in a wallet.
      operationId: nft_count_nfts
      requestBody:
        $ref: "#/components/requestBodies/wallet_id"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      wallet_id:
                        type: integer
                        format: int32
                      count:
                        type: integer
                        format: int32
                  - $ref: "#/components/schemas/apiResponse"
  /set_auto_claim:
    post:
      tags:
        - Wallet
      description: Set auto claim merkle coins config
      summary: Set auto claim merkle coins config
      operationId: set_auto_claim
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                enabled:
                  type: boolean
                  default: false
                tx_fee:
                  type: integer
                  format: uint64
                  default: 0
                min_amount:
                  type: integer
                  format: uint64
                  default: 0
                batch_size:
                  type: integer
                  format: uint16
                  default: 50
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      enabled:
                        type: boolean
                        default: false
                      tx_fee:
                        type: integer
                        format: uint64
                        default: 0
                      min_amount:
                        type: integer
                        format: uint64
                        default: 0
                      batch_size:
                        type: integer
                        format: uint16
                        default: 50
                  - $ref: "#/components/schemas/apiResponse"
  /get_auto_claim:
    post:
      tags:
        - Wallet
      description: Get auto claim merkle coins config
      summary: Get auto claim merkle coins config
      operationId: get_auto_claim
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      enabled:
                        type: boolean
                        default: false
                      tx_fee:
                        type: integer
                        format: uint64
                        default: 0
                      min_amount:
                        type: integer
                        format: uint64
                        default: 0
                      batch_size:
                        type: integer
                        format: uint16
                        default: 50
                  - $ref: "#/components/schemas/apiResponse"
  /spend_clawback_coins:
    post:
      tags:
        - Wallet
      description: Spend clawback coins that were sent or received
      summary: Spend clawback coins that were sent (to claw them back) or received (to claim them).
      operationId: spend_clawback_coins
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - coin_ids
              properties:
                coin_ids:
                  type: array
                  items:
                    type: string
                    format: hex
                fee:
                  type: integer
                  format: uint64
                  default: 0
                batch_size:
                  type: integer
                  format: uint16
                  default: 50
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      transaction_ids:
                        type: array
                        items:
                          type: string
                          format: hex
                  - $ref: "#/components/schemas/apiResponse"
  /vc_mint:
    post:
      tags:
        - Verified Credential
      description: Mint a verified credential using the assigned DID
      summary: Mint a verified credential using the assigned DID.
      operationId: vc_mint
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - did_id
              properties:
                did_id:
                  type: string
                  format: hex
                target_address:
                  type: string
                  format: hex
                fee:
                  type: integer
                  format: uint64
                  default: 0
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      vc_record:
                        $ref: "#/components/schemas/vc_record"
                      transactions:
                        type: array
                        items:
                          $ref: "#/components/schemas/transaction_record"
                  - $ref: "#/components/schemas/apiResponse"
  /vc_get:
    post:
      tags:
        - Verified Credential
      description: Given a launcher ID get the verified credential
      summary: Given a launcher ID get the verified credential.
      operationId: vc_get
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - vc_id
              properties:
                vc_id:
                  type: string
                  format: bytes32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      vc_record:
                        $ref: "#/components/schemas/vc_record"
                  - $ref: "#/components/schemas/apiResponse"
  /vc_get_list:
    post:
      tags:
        - Verified Credential
      description: Get a list of verified credentials
      summary: Get a list of verified credentials in the specified range and any 'proofs' associated with the roots contained within.
      operationId: vc_get_list
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                start:
                  type: integer
                  format: uint32
                end:
                  type: integer
                  format: uint32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      vc_records:
                        type: array
                        items:
                          $ref: "#/components/schemas/vc_record"
                      proofs:
                        type: object
                        additionalProperties:
                          type: string
                  - $ref: "#/components/schemas/apiResponse"
  /vc_spend:
    post:
      tags:
        - Verified Credential
      description: Spend a verified credential
      summary: Spend a verified credential.
      operationId: vc_spend
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - vc_id
              properties:
                vc_id:
                  type: string
                  format: bytes32
                new_puzhash:
                  type: string
                  format: bytes32
                new_proof_hash:
                  type: string
                  format: bytes32
                provider_inner_puzhash:
                  type: string
                  format: bytes32
                fee:
                  type: integer
                  format: uint64
                reuse_puzhash:
                  type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      transactions:
                        type: array
                        items:
                          $ref: "#/components/schemas/transaction_record"
                  - $ref: "#/components/schemas/apiResponse"
  /vc_add_proofs:
    post:
      tags:
        - Verified Credential
      description: Add a set of proofs to the DB that can be used when spending a VC
      summary: >-
        Add a set of proofs to the DB that can be used when spending a VC. VCs are near useless until their proofs have been added.
      operationId: vc_add_proofs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - proofs
              properties:
                proofs:
                  $ref: "#/components/schemas/vc_proofs"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiResponse"
  /vc_get_proofs_for_root:
    post:
      tags:
        - Verified Credential
      description: Given a specified vc root, get any proofs associated with that root
      summary: Given a specified vc root, get any proofs associated with that root.
      operationId: vc_get_proofs_for_root
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - root
              properties:
                root:
                  type: string
                  format: bytes32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      proofs:
                        type: object
                        additionalProperties:
                          type: string
                  - $ref: "#/components/schemas/apiResponse"
  /vc_revoke:
    post:
      tags:
        - Verified Credential
      description: Revoke an on chain VC provided the correct DID is available
      summary: Revoke an on chain VC provided the correct DID is available.
      operationId: vc_revoke
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - vc_parent_id
              properties:
                vc_parent_id:
                  type: string
                  format: bytes32
                fee:
                  type: integer
                  format: uint64
                  default: 0
                reuse_puzhash:
                  type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      transactions:
                        type: array
                        items:
                          $ref: "#/components/schemas/transaction_record"
                  - $ref: "#/components/schemas/apiResponse"
externalDocs:
  description: Find out more about chia
  url: https://chia.net
