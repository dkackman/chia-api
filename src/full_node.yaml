openapi: 3.0.3
info:
  description: >-
    The Chia node and services come with a JSON RPC API server that allows you to access information and control the services. 
    These are accessible via HTTPS, WebSockets, or via client SDKs. The ports can be configured in `~/.chia/mainnet/config/config.yaml`. 
    The RPC ports should not be exposed to the internet. TLS certificates are used to secure the communication 
    [using mutualTLS](https://github.com/dkackman/chia-api/wiki/Mutual-TLS).

    The full node uses port 8555 by default.
  version: 2.3.0
  title: Chia RPC
  termsOfService: https://www.chia.net/assets/legal/Guidelines-for-Using-Chia-Network.pdf
  contact:
    name: Chia Network
    url: https://www.chia.net/
    email: hello@chia.net
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://localhost:8555
    description: Full Node RPC
security:
  - bearerAuth: []
components:
  requestBodies:
    empty:
      $ref: "requestBodies/empty.yaml#/empty"
    header_hash:
      required: true
      description: the block's header_hash
      content:
        application/json:
          schema:
            type: object
            required:
              - header_hash
            properties:
              header_hash:
                type: string
                format: hex
    start_end:
      required: true
      description: Start and end heights
      content:
        application/json:
          schema:
            type: object
            required:
              - start
              - end
            properties:
              start:
                type: integer
                format: uint32
              end:
                type: integer
                format: uint32
  responses:
    empty:
      $ref: "responses/empty.yaml#/empty"
    coin_records:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              coin_records:
                type: array
                items:
                  $ref: "#/components/schemas/coin_record"
            allOf:
              - $ref: "#/components/schemas/apiResponse"
  schemas:
    proof_of_space:
      $ref: "schemas/proof_of_space.yaml#/proof_of_space"
    blockchain_state:
      $ref: "schemas/blockchain_state.yaml#/blockchain_state"
    block_record:
      $ref: "schemas/block_record.yaml#/block_record"
    coin:
      $ref: "schemas/coin.yaml#/coin"
    coin_record:
      $ref: "schemas/coin_record.yaml#/coin_record"
    coin_search_options:
      type: object
      properties:
        start_height:
          type: integer
          format: uint32
        end_height:
          type: integer
          format: uint32
        include_spent_coins:
          type: boolean
    coin_spend:
      $ref: "schemas/coin_spend.yaml#/coin_spend"
    connection_info:
      $ref: "schemas/connection_info.yaml#/connection_info"
    foliage:
      $ref: "schemas/foliage.yaml#/foliage"
    foliage_transaction_block:
      $ref: "schemas/foliage_transaction_block.yaml#/foliage_transaction_block"
    full_block:
      $ref: "schemas/full_block.yaml#/full_block"
    end_of_sub_slot_bundle:
      $ref: "schemas/end_of_sub_slot_bundle.yaml#/end_of_sub_slot_bundle"
    mempool_item:
      $ref: "schemas/mempool_item.yaml#/mempool_item"
    network_info:
      $ref: "schemas/network_info.yaml#/network_info"
    node_type:
      $ref: "schemas/node_type.yaml#/node_type"
    signage_point:
      $ref: "schemas/signage_point.yaml#/signage_point"
    spend_bundle:
      $ref: "schemas/spend_bundle.yaml#/spend_bundle"
    unfinished_header_block:
      $ref: "schemas/unfinished_header_block.yaml#/unfinished_header_block"
    apiResponse:
      $ref: "schemas/apiResponse.yaml#/apiResponse"
    vdf_info:
      $ref: "schemas/vdf_info.yaml#/vdf_info"
    vdf_proof:
      $ref: "schemas/vdf_proof.yaml#/vdf_proof"
  securitySchemes:
    bearerAuth:
      $ref: "securitySchemes/bearerAuth.yaml#/bearerAuth"
tags:
  - name: Blocks
    description: Methods for managing blocks.
  - name: Coins
    description: Methods for managing coins.
  - name: Shared
    description: Methods shared by all services.
  - name: Full Node
    description: The full node RPC API is exposed, by default, on port 8555. This port must not be exposed publicly for security concerns.
  - name: Mempool
    description: Get information about the mempool.
  - name: Fees
    description: Get information about fees.
paths:
  /stop_node:
    post:
      tags:
        - Shared
      summary: Stop the node.
      description: Stop the node.
      operationId: stop_node
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          $ref: "#/components/responses/empty"
  /open_connection:
    post:
      tags:
        - Shared
      summary: Add a connection to another node.
      description: Add a connection to another node.
      operationId: open_connection
      requestBody:
        required: true
        description: the address of the connection
        content:
          application/json:
            schema:
              type: object
              required:
                - ip
                - port
              properties:
                ip:
                  type: string
                  format: ipaddress
                port:
                  type: integer
      responses:
        "200":
          $ref: "#/components/responses/empty"
  /close_connection:
    post:
      tags:
        - Shared
      summary: Removes a connection.
      description: Removes a connection.
      operationId: close_connection
      requestBody:
        required: true
        description: the node id of the connection
        content:
          application/json:
            schema:
              type: object
              required:
                - node_id
              properties:
                node_id:
                  type: string
      responses:
        "200":
          $ref: "#/components/responses/empty"
  /get_connections:
    post:
      tags:
        - Shared
      summary: Retrieve the list of connections.
      description: Retrieve the list of connections.
      operationId: get_connections
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      connections:
                        type: array
                        items:
                          $ref: "#/components/schemas/connection_info"
                  - $ref: "#/components/schemas/apiResponse"
  /healthz:
    post:
      tags:
        - Shared
      summary: Heartbeat.
      description: Heartbeat.
      operationId: healthz
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiResponse"
  /get_routes:
    post:
      tags:
        - Shared
      summary: Retrieve the list of routes exposed by the service.
      description: Retrieve the list of routes/endpoints exposed by the service.
      operationId: get_routes
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      routes:
                        type: array
                        items:
                          type: string
                  - $ref: "#/components/schemas/apiResponse"
  /get_block_count_metrics:
    post:
      tags:
        - Blocks
      summary: Retrieves aggregate information about blocks.
      description: Retrieves aggregate information about blocks.
      operationId: get_block_count_metrics
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      metrics:
                        type: object
                        properties:
                          compact_blocks:
                            type: integer
                          uncompact_blocks:
                            type: integer
                          hint_count:
                            type: integer
                  - $ref: "#/components/schemas/apiResponse"
  /get_block_record:
    post:
      tags:
        - Blocks
      summary: Retrieves a block record by header hash.
      description: Retrieves a block record by header hash.
      operationId: get_block_record
      requestBody:
        $ref: "#/components/requestBodies/header_hash"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      block_record:
                        $ref: "#/components/schemas/block_record"
                  - $ref: "#/components/schemas/apiResponse"
  /get_block_records:
    post:
      tags:
        - Blocks
      summary: Retrieves block records in a range.
      description: Retrieves block records in a range
      operationId: get_block_records
      requestBody:
        $ref: "#/components/requestBodies/start_end"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      block_records:
                        type: array
                        items:
                          $ref: "#/components/schemas/block_record"
                  - $ref: "#/components/schemas/apiResponse"
  /get_block_record_by_height:
    post:
      tags:
        - Blocks
      summary: Retrieves a block record by height.
      description: Retrieves a block record by height (assuming the height <= peak height). Note that not all blocks will have all fields set here (depending on transaction block, finishing sub epoch, etc).
      operationId: get_block_record_by_height
      requestBody:
        required: true
        description: the block height
        content:
          application/json:
            schema:
              type: object
              required:
                - height
              properties:
                height:
                  type: integer
                  format: uint32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      block_record:
                        $ref: "#/components/schemas/block_record"
                  - $ref: "#/components/schemas/apiResponse"
  /get_block:
    post:
      tags:
        - Blocks
      summary: Retrieves a block by header hash.
      description: Retrieves a block by header hash.
      operationId: get_block
      requestBody:
        $ref: "#/components/requestBodies/header_hash"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      block:
                        $ref: "#/components/schemas/full_block"
                  - $ref: "#/components/schemas/apiResponse"
  /get_block_spends:
    post:
      tags:
        - Blocks
      summary: Retrieves the spends in the given block.
      description: Retrieves the spends in the given block.
      operationId: get_block_spends
      requestBody:
        $ref: "#/components/requestBodies/header_hash"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      block_spends:
                        type: array
                        items:
                          $ref: "#/components/schemas/coin_spend"
                  - $ref: "#/components/schemas/apiResponse"
  /get_blocks:
    post:
      tags:
        - Blocks
      summary: Get the blocks between a start and end height.
      description: Get the blocks between a start and end height
      operationId: get_blocks
      requestBody:
        required: true
        description: Start and end heights
        content:
          application/json:
            schema:
              type: object
              required:
                - start
                - end
              properties:
                start:
                  type: integer
                  format: uint32
                end:
                  type: integer
                  format: uint32
                exclude_header_hash:
                  type: boolean
                  default: false
                exclude_reorged:
                  type: boolean
                  default: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      blocks:
                        type: array
                        items:
                          $ref: "#/components/schemas/full_block"
                  - $ref: "#/components/schemas/apiResponse"
  /get_unfinished_block_headers:
    post:
      tags:
        - Blocks
      summary: Retrieves unfinished block headers.
      description: Retrieves unfinished block headers.
      operationId: get_unfinished_block_headers
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      headers:
                        type: array
                        items:
                          $ref: "#/components/schemas/unfinished_header_block"
                  - $ref: "#/components/schemas/apiResponse"
  /get_additions_and_removals:
    post:
      tags:
        - Blocks
      summary: Retrieves the additions and removals for a certain block.
      description: Retrieves the additions and removals (state transitions) for a certain block. Returns coin records for each addition and removal.
      operationId: get_additions_and_removals
      requestBody:
        $ref: "#/components/requestBodies/header_hash"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      additions:
                        type: array
                        items:
                          $ref: "#/components/schemas/coin_record"
                      removals:
                        type: array
                        items:
                          $ref: "#/components/schemas/coin_record"
                  - $ref: "#/components/schemas/apiResponse"
  /get_recent_signage_point_or_eos:
    post:
      tags:
        - Blocks
      summary: Retrieves a recent signage point or end of slot.
      description: Retrieves a recent signage point or end of slot.
      operationId: get_recent_signage_point_or_eos
      requestBody:
        required: true
        description: The signage point hash or challenge hash. If both are present sp_hash takes precedence.
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    sp_hash:
                      type: string
                      format: hex
                - type: object
                  properties:
                    challenge_hash:
                      type: string
                      format: hex
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    description: Type returned when a sp_hash is provided in the request
                    properties:
                      signage_point:
                        $ref: "#/components/schemas/signage_point"
                  - type: object
                    description: Type returned when a challenge_hash is provided in the request
                    properties:
                      eos:
                        $ref: "#/components/schemas/end_of_sub_slot_bundle"
                allOf:
                  - type: object
                    properties:
                      time_received:
                        type: number
                        format: double
                      reverted:
                        type: boolean
                  - $ref: "#/components/schemas/apiResponse"
  /get_blockchain_state:
    post:
      tags:
        - Full Node
      summary: Retrieves a summary of the current state of the blockchain and full node.
      description: Retrieves a summary of the current state of the blockchain and full node.
      operationId: get_blockchain_state
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      blockchain_state:
                        $ref: "#/components/schemas/blockchain_state"
                  - $ref: "#/components/schemas/apiResponse"
  /get_network_info:
    post:
      tags:
        - Shared
      description: Retrieves some information about the current network.
      summary: Retrieves some information about the current network.
      operationId: full_node_get_network_info
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/network_info"
                  - $ref: "#/components/schemas/apiResponse"
  /get_network_space:
    post:
      tags:
        - Full Node
      description: Retrieves an estimate of total space validating the chain between two block header hashes.
      summary: Retrieves an estimate of total space.
      operationId: get_network_space
      requestBody:
        required: true
        description: The block header hashes
        content:
          application/json:
            schema:
              type: object
              required:
                - newer_block_header_hash
                - older_block_header_hash
              properties:
                newer_block_header_hash:
                  type: string
                  format: hex
                older_block_header_hash:
                  type: string
                  format: hex
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      space:
                        type: integer
                        format: bigint
                  - $ref: "#/components/schemas/apiResponse"
  /get_all_mempool_tx_ids:
    post:
      tags:
        - Mempool
      description: Returns a list of all transaction IDs (spend bundle hashes) in the mempool.
      summary: Returns a list of all transaction IDs in the mempool.
      operationId: get_all_mempool_tx_ids
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      tx_ids:
                        type: array
                        items:
                          type: string
                          format: hex
                  - $ref: "#/components/schemas/apiResponse"
  /get_all_mempool_items:
    post:
      tags:
        - Mempool
      description: Returns all items in the mempool.
      summary: Returns all items in the mempool.
      operationId: get_all_mempool_items
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      mempool_items:
                        type: object
                        additionalProperties:
                          $ref: "#/components/schemas/mempool_item"
                  - $ref: "#/components/schemas/apiResponse"
  /get_mempool_item_by_tx_id:
    post:
      tags:
        - Mempool
      description: Returns a specific item from the mempool.
      summary: Returns a specific item from the mempool.
      operationId: get_mempool_item_by_tx_id
      requestBody:
        required: true
        description: The tx id.
        content:
          application/json:
            schema:
              type: object
              required:
                - tx_id
              properties:
                tx_id:
                  type: string
                  format: hex
                include_pending:
                  type: boolean
                  default: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      mempool_item:
                        $ref: "#/components/schemas/mempool_item"
                  - $ref: "#/components/schemas/apiResponse"
  /get_coin_records_by_puzzle_hash:
    post:
      tags:
        - Coins
      description: Retrieves the coins for a given puzzlehash, by default returns unspent coins.
      summary: Retrieves the coins for a given puzzlehash.
      operationId: get_coin_records_by_puzzle_hash
      requestBody:
        required: true
        description: The puzzle hash.
        content:
          application/json:
            schema:
              allOf:
                - type: object
                  required:
                    - puzzle_hash
                  properties:
                    puzzle_hash:
                      type: string
                      format: hex
                - $ref: "#/components/schemas/coin_search_options"
      responses:
        "200":
          $ref: "#/components/responses/coin_records"
  /get_coin_records_by_puzzle_hashes:
    post:
      tags:
        - Coins
      description: Retrieves the coins for a given puzzlehashes, by default returns unspent coins.
      summary: Retrieves the coins for a given puzzlehashes
      operationId: get_coin_records_by_puzzle_hashes
      requestBody:
        required: true
        description: The puzzle hashes.
        content:
          application/json:
            schema:
              allOf:
                - type: object
                  required:
                    - puzzle_hashes
                  properties:
                    puzzle_hashes:
                      type: array
                      items:
                        type: string
                        format: hex
                - $ref: "#/components/schemas/coin_search_options"
      responses:
        "200":
          $ref: "#/components/responses/coin_records"
  /get_coin_records_by_hint:
    post:
      tags:
        - Coins
      description: Retrieves coins by hint, by default returns unspent coins.
      summary: Retrieves coins by hint.
      operationId: get_coin_records_by_hint
      requestBody:
        required: true
        description: The hint.
        content:
          application/json:
            schema:
              allOf:
                - type: object
                  required:
                    - hint
                  properties:
                    hint:
                      type: string
                      format: hex
                - $ref: "#/components/schemas/coin_search_options"
      responses:
        "200":
          $ref: "#/components/responses/coin_records"
  /get_coin_record_by_name:
    post:
      tags:
        - Coins
      description: Retrieves a coin record by it's name.
      summary: Retrieves a coin record by it's name.
      operationId: get_coin_record_by_name
      requestBody:
        required: true
        description: The coin name.
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  format: hex
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      coin_record:
                        $ref: "#/components/schemas/coin_record"
                  - $ref: "#/components/schemas/apiResponse"
  /get_coin_records_by_names:
    post:
      tags:
        - Coins
      description: Retrieves the coins for given coin IDs, by default returns unspent coins.
      summary: Retrieves the coins for given coin IDs.
      operationId: get_coin_records_by_names
      requestBody:
        required: true
        description: The coin names.
        content:
          application/json:
            schema:
              allOf:
                - type: object
                  required:
                    - names
                  properties:
                    names:
                      type: array
                      items:
                        type: string
                        format: hex
                - $ref: "#/components/schemas/coin_search_options"
      responses:
        "200":
          $ref: "#/components/responses/coin_records"
  /get_coin_records_by_parent_ids:
    post:
      tags:
        - Coins
      description: Retrieves the coins for given parent coin IDs, by default returns unspent coins.
      summary: Retrieves the coins for given parent coin IDs.
      operationId: get_coin_records_by_parent_ids
      requestBody:
        required: true
        description: The parent ids.
        content:
          application/json:
            schema:
              allOf:
                - type: object
                  required:
                    - parent_ids
                  properties:
                    parent_ids:
                      type: array
                      items:
                        type: string
                        format: hex
                - $ref: "#/components/schemas/coin_search_options"
      responses:
        "200":
          $ref: "#/components/responses/coin_records"
  /get_puzzle_and_solution:
    post:
      tags:
        - Coins
      description: Retrieves a coin solution.
      summary: Retrieves a coin solution.
      operationId: get_puzzle_and_solution
      requestBody:
        required: true
        description: The coin id and height
        content:
          application/json:
            schema:
              type: object
              required:
                - coin_id
                - height
              properties:
                coin_id:
                  type: string
                  format: hex
                height:
                  type: integer
                  format: uint32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      coin_solution:
                        $ref: "#/components/schemas/coin_spend"
                  - $ref: "#/components/schemas/apiResponse"
  /push_tx:
    post:
      tags:
        - Coins
      description: Pushes a transaction/spend bundle to the mempool and blockchain. Returns whether the spend bundle was successfully included into the mempool.
      summary: Pushes a transaction/spend bundle to the mempool and blockchain.
      operationId: push_tx
      requestBody:
        required: true
        description: The spend bundle
        content:
          application/json:
            schema:
              type: object
              required:
                - spend_bundle
              properties:
                spend_bundle:
                  $ref: "#/components/schemas/spend_bundle"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      status:
                        type: string
                  - $ref: "#/components/schemas/apiResponse"
  /get_fee_estimate:
    post:
      tags:
        - Fees
      description: Estimates the fee for a given spend_bundle.
      summary: Estimates the fee for a given spend_bundle.
      operationId: get_fee_estimate
      requestBody:
        required: true
        description: The spend bundle
        content:
          application/json:
            schema:
              type: object
              properties:
                spend_bundle:
                  $ref: "#/components/schemas/spend_bundle"
                cost:
                  type: integer
                  format: uint64
                target_times:
                  type: array
                  items:
                    type: integer
                spend_type:
                  type: integer
                  format: uint64
                spend_count:
                  type: integer
                  default: 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      estimates:
                        type: array
                        items:
                          type: integer
                          format: uint64
                      target_times:
                        type: array
                        items:
                          type: integer
                      current_fee_rate:
                        type: number
                      mempool_size:
                        type: integer
                        format: uint64
                      mempool_fees:
                        type: integer
                        format: uint64
                      mempool_max_size:
                        type: integer
                        format: uint64
                      num_spends:
                        type: integer
                        format: int32
                      full_node_synced:
                        type: boolean
                      peak_height:
                        type: integer
                        format: uint32
                      last_peak_timestamp:
                        type: integer
                        format: uint64
                      last_block_cost:
                        type: integer
                        format: uint64
                      fees_last_block:
                        type: integer
                        format: uint64
                      fee_rate_last_block:
                        type: number
                      last_tx_block_height:
                        type: integer
                        format: uint32
                      node_time_utc:
                        type: integer
                        format: uint64
                  - $ref: "#/components/schemas/apiResponse"
  /get_mempool_items_by_coin_name:
    post:
      tags:
        - Mempool
      description: Gets items in the mempool by a coin name.
      summary: Gets items in the mempool by a coin name.
      operationId: get_mempool_items_by_coin_name
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - coin_name
              properties:
                coin_name:
                  type: string
                  format: hex
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      mempool_items:
                        type: array
                        items:
                          $ref: "#/components/schemas/mempool_item"
                  - $ref: "#/components/schemas/apiResponse"
  /get_block_spends_with_conditions:
    post:
      tags:
        - Blocks
      description: Retrieves the spends in the given block, including its conditions.
      summary: Retrieves the spends in the given block, including its conditions.
      operationId: get_block_spends_with_conditions
      requestBody:
        $ref: "#/components/requestBodies/header_hash"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      block_spends_with_conditions:
                        type: array
                        items:
                          type: object
                          properties:
                            coin_spend:
                              $ref: "#/components/schemas/coin_spend"
                            conditions:
                              type: array
                              items:
                                type: object
                                properties:
                                  opcode:
                                    type: integer
                                    format: uint8
                                  vars:
                                    type: array
                                    items:
                                      type: string
                                      format: bytes
                  - $ref: "#/components/schemas/apiResponse"
  /get_aggsig_additional_data:
    post:
      tags:
        - Full Node
      description: Retrieves aggregated signature additional data.
      summary: Retrieves aggregated signature additional data.
      operationId: get_aggsig_additional_data
      requestBody:
        $ref: "#/components/requestBodies/empty"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      additional_data:
                        type: string
                        format: hex
                  - $ref: "#/components/schemas/apiResponse"
externalDocs:
  description: Find out more about chia
  url: https://chia.net
